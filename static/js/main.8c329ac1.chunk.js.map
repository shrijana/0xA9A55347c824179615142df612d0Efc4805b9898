{"version":3,"sources":["theme.js","hooks/connectors.js","hooks/useWeb3Modal.js","../../contracts/src/abis.js","../../contracts/src/addresses.js","utils/utils.js","components/header/Header.styles.js","hooks/useBlock.js","hooks/useBalance.js","hooks/useTokenBalance.js","components/header/Header.component.js","components/walletmodal/WalletModal.styles.js","components/footer/Footer.styles.js","components/icons/Discord.jsx","components/footer/Footer.component.js","containers/funds/Funds.styles.js","components/cards/infocard/InfoCard.styles.js","components/progressbar/ProgressBar.component.js","components/tokeninfo/TokenInfo.styles.js","hooks/useName.js","hooks/useSymbol.js","utils/contracts.js","state/bnbPriceContext.js","hooks/useAveragePrice.js","hooks/usePoolTokenBalance.js","hooks/usePoolTokenWeight.js","hooks/usePoolTokenInfo.js","components/tokeninfo/TokenInfo.component.js","components/cards/infocard/InfoCard.component.js","components/cards/actioncard/ActionCard.styles.js","hooks/useCurrentTokens.js","utils/bmath.js","components/panels/mintpanel/MintPanel.styles.js","components/inputs/InputToken.js","hooks/useApprove.js","hooks/useAllowance.js","components/buttons/ApproveButton.component.js","components/lists/tokenlist/TokenList.component.js","components/buttons/MintWithBnbButton.js","hooks/useJoinPool.js","hooks/useJoinSwapPool.js","hooks/useSwapBnbForAllTokensMint.js","hooks/useCheckIfAllApproved.js","hooks/useAllBalanceAvailable.js","components/panels/mintpanel/MintPanel.component.js","hooks/useGetSwapFee.js","components/panels/swappanel/SwapPanel.styles.js","components/inputs/InputPicker.js","components/panels/burnpanel/BurnPanel.styles.js","hooks/useExitPool.js","hooks/useExitSwapPool.js","hooks/useSwapBnbForAllTokensBurn.js","components/panels/burnpanel/BurnPanel.component.js","hooks/useTotalWeight.js","hooks/useTotalSupply.js","hooks/usePoolTokenBalances.js","hooks/usePoolTokenWeights.js","components/cards/actioncard/ActionCard.component.js","hooks/usePoolInfo.js","containers/funds/Funds.component.js","containers/dashboard/Dashboard.styles.js","components/cards/poolcard/PoolCard.styles.js","components/avatars/TokenAvatar.js","components/cards/poolcard/PoolCard.component.js","containers/dashboard/Dashboard.component.js","App.js","index.js","assets/coins/biT10.png","assets/coins/autofarm.webp","assets/coins/bakerytoken.webp","assets/coins/bscpad.webp","assets/coins/bunny.webp","assets/coins/cake.webp","assets/coins/safepal.webp","assets/coins/trust.webp","assets/coins/venus.webp","assets/coins/wbnb.webp","assets/coins/swipe.webp","assets/coins/ellipsis.webp","assets/coins/banana.webp","assets/coins/bifi.webp","assets/coins/bison.svg","assets/logos/BiSharesLogo@2x.png"],"names":["_theme","createMuiTheme","root","display","alignItems","justifyContent","typography","h1","fontWeight","h2","h3","h4","h5","fontSize","h6","body1","body2","palette","type","primary","main","secondary","background","header","border","subcontainer","dark","light","gradient","footer","paper","text","color","radius","error","highlight","green","theme","responsiveFontSizes","RPC_URL_97","RPC_URL_56","injected","InjectedConnector","supportedChainIds","NetworkConnector","urls","56","97","defaultChainId","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","WalletLinkConnector","url","appName","LedgerConnector","chainId","useWeb3Modal","config","context","useWeb3React","connector","activate","library","account","deactivate","active","React","useState","activatingConnector","setActivatingConnector","provider","autoLoad","infuraId","NETWORK","providerOptions","walletconnect","name","package","WalletConnectProvider","options","network","web3Modal","Web3Modal","cacheProvider","useEffect","undefined","loadWeb3Modal","useCallback","a","console","log","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","cachedProvider","abis","erc20","indexpool","uniswapV2oracle","indexseller","uniswapRouterMinter","uniswapRouterBurner","addresses","1337","factory","router","MULTISIG","WBNB","CAKE","SWIPE","BAKE","VENUS","ELLIPSIS","BANANA","SAFEPAL","TWT","BIFI","BISON","proxymanager","proxyaccesscontrol","poolfactory","controllerImplementation","controller","poolInitializerImplementation","tokensellerimplementation","poolImplementation","biT10_initializer","biT10","formatter","Intl","NumberFormat","makeContract","abi","address","eth","Contract","isApproved","allowance","Number","getTokenAvatar","BigNumber","coinaddress","img","wbnb","tokenname","symbol","cake","swipe","bakerytoken","venus","ellipsis","banana","safepal","trust","bifi","AUTO","autofarm","BSCPAD","bscpad","BUNNY","bunny","bison","mockPool","getCoinAvatar","useStyles","makeStyles","width","padding","backgroundColor","minHeight","borderBottom","title","fontVariantCaps","breakpoints","up","wrapper","margin","flexWrap","button","minWidth","nowrapper","navwrapper","paddingLeft","modal","height","position","logo","headerlogo","useBlock","block","setBlock","interval","setInterval","getBlockNumber","latestBlockNumber","clearInterval","useBalance","balance","setBalance","stale","getBalance","then","utils","fromWei","catch","useTokenBalance","tokenAddress","fetchBalance","contract","methods","balanceOf","call","Header","borderRadius","card","maxWidth","nav1","nav2","nav3","setIsShown","accountBalance","classes","AppBar","elevation","Toolbar","className","Grid","container","spacing","justify","item","xs","to","src","BiSharesLogo","alt","direction","Typography","variant","ButtonGroup","Button","size","component","Link","onMouseEnter","onMouseLeave","onClick","borderTop","Icon","props","viewBox","fill","xmlns","clip-path","d","id","Footer","MaterialLink","target","href","noWrap","style","textDecoration","Discord","textShadow","backgroundVideo","zIndex","content","avatar","avatarImage","actions","BorderLinearProgress","withStyles","colorPrimary","bar","LinearProgress","ProgressBar","value","percentage","useName","setName","fetchName","_name","toString","useSymbol","setSymbol","fetchSymbol","_symbol","getOracle","BnbPriceContext","createContext","BnbPriceContextProvider","children","price","setPrice","updatePrice","fetch","res","json","binancecoin","usd","Provider","useAveragePrice","bnbUsdPrice","useContext","fetchPrice","_tokenAddress","computeAverageTokenPrice","_price","usePrice","div","times","usePoolTokenBalance","poolAddress","_balance","useTokenWeight","tokenWeight","setTokenWeight","fetchWeight","getDenormalizedWeight","_tokenWeight","usePoolTokenInfo","poolToken","info","setInfo","tokenName","tokenSymbol","tokenBalance","usePoolTokenWeight","averagePrice","fetchInfo","_poolToken","_tokenBalance","_averagePrice","_info","weight","TokenInfo","poolInfo","handleSetUsdValue","weightPercentage","setWeightPercentage","usdValue","setUsdValue","poolTokenInfo","totalWeight","tokenUsdValue","toNumber","Avatar","lg","format","defaultProps","PoolContent","tokens","map","token","key","InfoCard","usdValueTokensMap","setUsdValueTokensMap","tvl","setTvl","valueBN","prevUsdValueTokensMap","valuesArray","Object","values","length","sum","CardHeader","subheader","totalSupply","difference","useCurrentTokens","setTokens","fetchCurrentTokens","getCurrentTokens","_tokens","BONE","pow","EXIT_FEE","BPOW_PRECISION","idiv","bnum","val","calcAllInGivenPoolOut","tokenBalances","poolSupply","poolAmountOut","ratio","bdiv","amountsIn","i","push","bmul","toFixed","calcAllOutGivenPoolIn","tokenDenorms","poolAmountIn","exitFee","minus","amountsOut","eq","calcSingleInGivenPoolOut","tokenBalanceIn","tokenWeightIn","swapFee","normalizedWeight","tokenAmountInAfterFee","bpow","plus","zar","b","btoi","bsubSign","gte","bool","base","exp","whole","remain","wholePow","n","z","modulo","bpowi","partialResult","precision","x","xneg","term","negative","bigK","c","cneg","bpowApprox","marginTop","buttonBox","textAlign","maxHeight","withoutLabel","textField","input","subtitle1","helperText","borderColor","InputToken","onDemandGreaterThanBalance","setValue","bnDemandValue","placeholder","newValue","TextField","onChange","e","preventDefault","isNaN","FormHelperTextProps","fullWidth","InputProps","startAdornment","InputAdornment","maxButton","endAdornment","autoComplete","toBig","onInputGreaterThanBalance","memo","prevProps","nextProps","useApprove","spender","amount","contractAddress","addToast","useToasts","approve","_spender","_amount","_contractAddress","send","from","appearance","autoDismiss","err","message","includes","onApprove","useAllowance","setAllowance","fetchAllowance","_allowance","StyledButton","label","textTransform","MaterialButton","ApproveButton","poolTokenAddress","handleApproved","isTokenApproved","useMemo","onApproveHandler","disabled","overflowY","TokenList","poolTokens","poolAmounts","withButton","handleSelect","singleAmount","setSingle","setApprovedMap","prevApprovedMap","List","dense","indexOf","ListItem","role","ListItemIcon","ListItemAvatar","handleMintDisabling","underText","fontFamily","lineHeight","letterSpacing","MintWithBnbButton","bnbToSendValue","styles","useJoinPool","maxAmountsIn","join","_poolAmountOut","_maxAmountsIn","joinPool","onJoinPool","useJoinSwapPool","tokenIn","tokenAmountIn","minPoolAmountOut","joinswap","joinswapExternAmountIn","onJoinSwapPool","useSwapBnbForAllTokensMint","indexPoolAddress","indexPoolTokensCount","valueBNBIn","intermediaries","Array","onSwapBnbForTokensAndMint","swapETHForAllTokensAndMintExact","useCheckIfAllApproved","isAllApproved","setIsAllApproved","checkApproveStatus","setCheckApproveStatus","getApproveStatus","forEach","useAllBalanceAvailable","inputValue","hasAllBalance","setHasAllBalance","checkBalanceStatus","setCheckBalanceStatus","getBalanceStatus","index","inputAmount","parseInt","MintPanel","setInputValue","amounts","setAmounts","setSingleAmount","inputError","setInputError","selected","setSelected","demandBalanceMap","setDemandBalanceMap","isMintDisabled","setIsMintDisabled","isDemandGreaterThanBalance","setIsDemandGreaterThanBalance","checkIfAllApproved","hasBalanceAvailable","potentialBnbSwappedAmount","setPotentialBnbSwappedAmount","selectedTokenInfo","bnbTokenInfo","handleAmounts","_poolInfo","_amounts","balances","_amountSingle","demandGreaterThanBalanceHandler","prevDemandBalanceMap","isAnyDemandGreaterThanBalance","find","handleChange","toWei","gt","single","parseFloat","useGetSwapFee","textfield","errorfield","menu","setSwapFee","getSwapFee","_poolAddress","fee","useExitPool","minAmountsOut","exitPool","_poolAmountIn","_minAmountsOut","onExitPool","useExitSwapPool","tokenOut","minAmountOut","exitswap","exitswapPoolAmountIn","onExitSwapPool","useSwapBnbForAllTokensBurn","onSwapBnbForTokensAndBurn","burnForAllTokensAndSwapForETH","BurnPanel","poolAllowance","weights","tokenBalanceOut","tokenWeightOut","poolAmountInAfterExitFee","newTokenBalanceOut","tokenAmountOutBeforeSwapFee","zaz","calcSingleOutGivenPoolIn","useTotalWeight","setTotalWeight","fetchTotalWeight","getTotalDenormalizedWeight","totWeight","useTotalSupply","supply","setTotalSupply","fetchSupply","totSupply","usePoolTokenBalances","updateBalance","setUpdateBalance","fetchBalances","tokenArr","bals","usePoolTokenWeights","setTokenWeights","fetchWeights","ActionCard","poolTokenWeights","poolTokenBalances","currentActionTab","setCurrentActionTab","CircularProgress","setComponent","handleClick","tab","usePoolInfo","_poolTokens","_poolTokenBalances","_poolTokenWeights","_totalWeight","_totalSupply","_swapFee","Funds","history","useHistory","boxShadow","StyledAvatar","TokenAvatar","Size","setImg","tokenimage","PoolCard","poolAvatar","currentTokens","setContent","_content","renderContent","AvatarGroup","max","Dashboard","App","darkMode","checkConnection","ethereum","web3","Web3","currentProvider","getAccounts","accounts","Child","useParams","ThemeProvider","autoDismissTimeout","placement","nav4","path","exact","ReactDOM","render","getLibrary","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8c329ac1.chunk.js","sourcesContent":["\r\nimport { \r\n  createMuiTheme, \r\n  responsiveFontSizes, \r\n} from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst _theme = createMuiTheme({\r\n  root: {\r\n     display: 'flex', \r\n     alignItems: 'center',\r\n     justifyContent:'center'\r\n  },\r\n  typography: {\r\n    h1: {\r\n       fontWeight: '400'\r\n    },\r\n    h2: {\r\n     \r\n    },\r\n    h3: {\r\n      \r\n    },\r\n    h4: {\r\n      \r\n     \r\n    },\r\n    h5: {\r\n      fontSize:'32px'\r\n    },\r\n    h6: {\r\n      \r\n    },\r\n    body1: {\r\n      fontSize: '24px'\r\n    },\r\n    body2: {\r\n      fontSize: '20px'\r\n    },\r\n  \r\n  },\r\n  \r\n  palette: {\r\n      type: 'dark',\r\n     \r\n      primary: {\r\n          main: '#DAA10E',\r\n      },\r\n      secondary: {\r\n        main: \"#2C2B2B\" ,\r\n      },\r\n      background: {\r\n          main: '#191919',\r\n      },\r\n      header: {\r\n        main: \"#2C2B2B\",\r\n        border: \"1px solid #707070\"\r\n      },\r\n      subcontainer: {\r\n        dark: \"#2C2B2B\",\r\n        light: \"#fafafa\"\r\n      },\r\n      gradient:{\r\n        main: '#DBA517'\r\n      },\r\n      footer: {\r\n        main: \"#191919\"\r\n      },\r\n      paper: {\r\n          main: '#242325'\r\n      },\r\n      text: {\r\n          primary: \"#fafafa\",\r\n          secondary: \"#fafafa\",\r\n          dark: '#747474'\r\n      },\r\n      border: {\r\n        color: '1px solid #DAA10E',\r\n        radius: '5px',\r\n        error: '1px solid #FF0000',\r\n        highlight: '3px solid #DAA10E'\r\n      },\r\n      green: {\r\n        main: '#00F600'\r\n      }\r\n  },\r\n});\r\n\r\nexport const theme = responsiveFontSizes(_theme);\r\n\r\n\r\n\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { NetworkConnector } from '@web3-react/network-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { LedgerConnector } from '@web3-react/ledger-connector'\r\n\r\nconst POLLING_INTERVAL = 12000;\r\n\r\nconst RPC_URL_97=\"https://data-seed-prebsc-1-s1.binance.org:8545\"\r\nconst RPC_URL_56=\"https://bsc-dataseed1.binance.org\"\r\n\r\nconst RPC_URLS_ = [\r\n  RPC_URL_97 ,\r\n  RPC_URL_56 \r\n]\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42, 250, 97, 56, 1337] })\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { 56: RPC_URL_56, 97: RPC_URL_97 },\r\n  defaultChainId: 1\r\n})\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 56: RPC_URL_56 },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL\r\n})\r\n\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: RPC_URL_56,\r\n  appName: 'web3-react example'\r\n})\r\n\r\nexport const ledger = new LedgerConnector({ chainId: 56, url: RPC_URL_56, pollingInterval: POLLING_INTERVAL })\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\n\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n\r\nimport { useEagerConnect, useInactiveListener } from './hooks'\r\n\r\nimport {\r\n  injected,\r\n  walletconnect,\r\n  walletlink\r\n} from './connectors'\r\n\r\n// Enter a valid infura key here to avoid being rate limited\r\n// You can get a key for free at https://infura.io/register\r\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\r\n\r\nconst NETWORK_NAME = \"binance\";\r\n\r\nfunction useWeb3Modal(config = {}) {\r\n  const context = useWeb3React()\r\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context;\r\n  // handle logic to recognize the connector currently being activated\r\n  const [activatingConnector, setActivatingConnector] = React.useState()\r\n\r\n  const [provider, setProvider] = useState();\r\n\r\n  const { autoLoad = true, infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\r\n\r\n  const providerOptions = {\r\n    walletconnect: {\r\n      display: {\r\n        name: \"Mobile\"\r\n      },\r\n      package: WalletConnectProvider,\r\n      options: {\r\n        rpc: {\r\n          56: 'https://bsc-dataseed1.binance.org'\r\n        },\r\n        network: 'binance',\r\n        chainId: 56,\r\n        infuraId: 'YOUR_INFURA_KEY',\r\n      }\r\n    }\r\n  };\r\n  // Web3Modal also supports many other wallets.\r\n  // You can see other options at https://github.com/Web3Modal/web3modal\r\n  const web3Modal = new Web3Modal({\r\n    network: NETWORK,\r\n    cacheProvider: true,\r\n    providerOptions,\r\n  });\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined)\r\n\r\n    }\r\n  }, [activatingConnector, connector])\r\n\r\n\r\n\r\n  // Open wallet selection modal.\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    console.log('load....')\r\n    setActivatingConnector(injected)\r\n    activate(injected)\r\n\r\n    //setActivatingConnector(injected)\r\n    //activate(injected)\r\n    /*\r\n    const newProvider = await web3Modal.connect();\r\n    setProvider(new Web3Provider(newProvider));\r\n    //console.log('New provider: ', newProvider);\r\n    activate(injected);\r\n    */\r\n  }, [activate]);\r\n\r\n  const logoutOfWeb3Modal = useCallback(\r\n    async function () {\r\n\r\n      await web3Modal.clearCachedProvider();\r\n      window.location.reload();\r\n    },\r\n    [web3Modal],\r\n  );\r\n\r\n  // If user has loaded a wallet before, load it automatically.\r\n  useEffect(() => {\r\n    if (autoLoad === true && web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [autoLoad, loadWeb3Modal, web3Modal.cachedProvider]);\r\n\r\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\r\n}\r\n\r\nexport default useWeb3Modal;\r\n","import erc20Abi from \"./abis/erc20.json\";\r\nimport indexpoolAbi from './abis/indexpool.json'\r\nimport uniswapV2oracleAbi from './abis/oracle.json'\r\nimport sellerAbi from './abis/seller.json'\r\nimport uniswapRouterMinterAbi from './abis/uniswapRouterMinter.json'\r\nimport uniswapRouterBurnerAbi from './abis/uniswapRouterBurner.json'\r\n\r\nconst abis = {\r\n  erc20: erc20Abi,\r\n  indexpool: indexpoolAbi,\r\n  uniswapV2oracle: uniswapV2oracleAbi,\r\n  indexseller: sellerAbi,\r\n  uniswapRouterMinter: uniswapRouterMinterAbi,\r\n  uniswapRouterBurner: uniswapRouterBurnerAbi\r\n};\r\n\r\nexport default abis;\r\n","\r\nconst addresses = {\r\n  // local fork - depending on what chain you are forking you can copy the addresses from below.\r\n  1337: {\r\n\r\n\r\n\r\n  },\r\n  // 97: {\r\n  //   // BSC TESTNET\r\n\r\n  //   // DO NOT DELETE\r\n  //   factory: '0x6725F303b657a9451d8BA641348b6761A6CC7a17',\r\n  //   router: '0xD99D1c33F9fC3444f8101754aBC46c52416550D1',\r\n  //   WBNB: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\r\n  //   MULTISIG: '0x60731C18EDd8a0Fd2A0d0C8B6462c8026e1939A7',\r\n  //   uniswapV2oracle: '0x1165056A2FD62e850b832081906719C2E9E12d07',\r\n  //   CAKE: '0x023669a7506594459d5007A2978e1dFF8078c9e4',\r\n  //   VENUS: '0x61fc27A3012c03acD5A324eB6D910b34b9A11672',\r\n  //   // AUTO: '0x98B15C716B4636E7D75b6ae15264597ACb7e2245',\r\n  //   // BIFI: '0xBc176b28364320AAC3527c7533804f04Bb0e1B66',\r\n  //   // TWT: '0x2A0D658b465a823d0EeF0EF414c70fcCEA6dA541',\r\n  //   // BAKE: '0x3d81B793391E3e39291219b251591f1A384E8651',\r\n  //   // BSCPAD: '0xECc8cA0720F1366A0566e2cd0661194d788EA297',\r\n  //   // SAFEPAL: '0x1aF3516221EA8D20e161192634884b46FB357b70',\r\n  //   // BUNNY: '0x38527eA89Ef201DA7ee134E20Abf23db6D38b77A',\r\n\r\n\r\n  //   proxymanager: '0x00D5d9dEe4C12690301651c89E2ccAbA3D7ceD09',\r\n  //   proxyaccesscontrol: '0xBDF1b07a4CDd8a9775f970578fF37fE36FEA240b',\r\n  //   poolfactory: '0x3bB0574914Ae5eE8AD01a67d795e3691321b564d',\r\n  //   controllerImplementation: '0xd4B13B1ab922bB34BC239b7a125264308750F356',\r\n  //   controller: '0x4B61fC09E8DC9Ba4A6a3bB84c3d5fA0Fb465C682',\r\n  //   poolInitializerImplementation: '0x415B11c07de7F86c575294d9EfbE0b6f30719232',\r\n  //   tokensellerimplementation: '0x21c369E1d572d3d00E9c3b36B13542C0653deE7B',\r\n  //   poolImplementation: '0x6F4a3BB9c28486087609d41519B0fb185E62A035',\r\n  //   biT10_initializer: '0xCEc244420D365Bc0Ab29786ae6e2F291543D06D3',\r\n  //   biT10: '0x1FF6b21f21EE6B7eDfaC5652b60DAFE060f6EEDE'\r\n\r\n  // },\r\n\r\n  56: {\r\n    // BSC MAINNET\r\n    /*\r\n    // PANCAKESWAP\r\n    factory: '0xBCfCcbde45cE874adCB698cC183deBcF17952812',  // PancakeSwap MAINNET uniswapV2factory.\r\n    router: '0x10ED43C718714eb63d5aA57B78B54704E256024E',   // PancakeSwap MAINNET uniswapV2router.\r\n    //uniswapV2oracle: '0x244F2A6cA291c66164D34a26e7b74f43893db0F2', // pancakeswap MAINNET oracle deployed at 9 juli\r\n    */\r\n    // APESWAP\r\n    factory: '0x0841BD0B734E4F5853f0dD8d7Ea041c241fb0Da6',  // ApeSwap MAINNET uniswapV2factory.\r\n    router: '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7',   // ApeSwap MAINNET uniswapV2router.\r\n    uniswapV2oracle: '0x7D1F68D7BA8A40B73EeB499E8D9D96145d1f6500', // apeswap MAINNET oracle deployed at 9 juli\r\n\r\n    MULTISIG: '0x60731C18EDd8a0Fd2A0d0C8B6462c8026e1939A7',\r\n\r\n    // FIRST FUND TOKENS\r\n    WBNB: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    CAKE: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n    SWIPE: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\r\n    BAKE: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    VENUS: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\r\n    ELLIPSIS: '0xA7f552078dcC247C2684336020c03648500C6d9F',\r\n    BANANA: '0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95',\r\n    SAFEPAL: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\r\n    TWT: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\r\n    BIFI: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n    BISON: '0x19A6Da6e382b85F827088092a3DBe864d9cCba73',\r\n\r\n    proxymanager: '0x6C2Cf216B42c9cBEe66b6e64F0479FdB2F8c5dcb',\r\n    proxyaccesscontrol: '0x5050c25E12dbab33E43944CB1AE07531419D5dc0',\r\n    poolfactory: '0x4D71bc1CF4fc16e682aBc37c527ed8f7B3B64d56',\r\n    controllerImplementation: '0x3D53F056C060c0CfFbEFD3180bDB88Ca2fC04558',\r\n    controller: '0x2a717dbE67a9a0c06478b8C48cc1994ba62917Fe',\r\n    poolInitializerImplementation: '0xEF445D111d6C073b3e64255313bDE074b0d55205',\r\n    tokensellerimplementation: '0xd3152d5aAf4F4442860aadDd38d2450E2FF3Ba0C',\r\n    poolImplementation: '0xAF315448D4E2722439d5080fA7FECC98D5103180',\r\n    biT10_initializer: '0x5a624bC3174637aD4430Ca3fE25497276cD1987d',\r\n    biT10: '0xA9A55347c824179615142df612d0Efc4805b9898'\r\n  },\r\n\r\n};\r\n\r\nexport default addresses;\r\n","import BigNumber from 'bignumber.js'\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\n\r\nimport autofarm from '../assets/coins/autofarm.webp'\r\nimport bakerytoken from '../assets/coins/bakerytoken.webp'\r\nimport bscpad from '../assets/coins/bscpad.webp'\r\nimport bunny from '../assets/coins/bunny.webp'\r\nimport cake from '../assets/coins/cake.webp'\r\nimport safepal from '../assets/coins/safepal.webp'\r\nimport trust from '../assets/coins/trust.webp'\r\nimport venus from '../assets/coins/venus.webp'\r\nimport wbnb from '../assets/coins/wbnb.webp'\r\nimport swipe from '../assets/coins/swipe.webp'\r\nimport ellipsis from '../assets/coins/ellipsis.webp'\r\nimport banana from '../assets/coins/banana.webp'\r\nimport bifi from '../assets/coins/bifi.webp'\r\nimport bison from '../assets/coins/bison.svg'\r\n\r\nimport biT10 from '../assets/coins/biT10.png'\r\n\r\n\r\nexport const MAX_UINT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\r\nexport const MAX_UINT_96 = '0xffffffffffffffffffffffff'\r\n\r\nexport const formatter = new Intl.NumberFormat('en-US',\r\n    // These options are needed to round to whole numbers if that's what you want.\r\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n);\r\n\r\n\r\nexport const SHORT_TWAP_MIN = '60';\r\nexport const SHORT_TWAP_MAX = '116000';\r\n\r\nexport const makeContract = (library, abi, address) => {\r\n    return new library.eth.Contract(abi, address);\r\n}\r\nexport const isApproved = (allowance) => Number(allowance) >= Number(MAX_UINT_96)\r\n\r\n\r\nconst blocksPerYear = new BigNumber(10518975);\r\n\r\nexport const getTokenAvatar = (coinaddress, chainId) => {\r\n\r\n    if (coinaddress === addresses[chainId].WBNB) {\r\n\r\n        return { img: wbnb, tokenname: 'WRAPPED BNB', symbol: 'WBNB', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].CAKE) {\r\n\r\n        return { img: cake, tokenname: 'CAKE', symbol: 'CAKE', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].SWIPE) {\r\n\r\n        return { img: swipe, tokenname: 'SWIPE', symbol: 'SWIPE', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BAKE) {\r\n\r\n        return { img: bakerytoken, tokenname: 'BAKE', symbol: 'BAKE', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].VENUS) {\r\n\r\n        return { img: venus, tokenname: 'VENUS', symbol: 'VENUS', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].ELLIPSIS) {\r\n\r\n        return { img: ellipsis, tokenname: 'ELLIPSIS', symbol: 'ELLIPSIS', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BANANA) {\r\n\r\n        return { img: banana, tokenname: 'BANANA', symbol: 'BANANA', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].SAFEPAL) {\r\n\r\n        return { img: safepal, tokenname: 'SAFEPAL', symbol: 'SAFEPAL', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].TWT) {\r\n\r\n        return { img: trust, tokenname: 'TRUST WALLET', symbol: 'TWT', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BIFI) {\r\n\r\n        return { img: bifi, tokenname: 'BEEFY FINANCE', symbol: 'BIFI', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].AUTO) {\r\n        return { img: autofarm, tokenname: 'AUTOFARM', symbol: 'AUTO', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BSCPAD) {\r\n\r\n        return { img: bscpad, tokenname: 'BSC PAD', symbol: 'BSCPAD', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BUNNY) {\r\n\r\n        return { img: bunny, tokenname: 'BUNNY', symbol: 'BUNNY', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BISON) {\r\n\r\n        return { img: bison, tokenname: 'BISON', symbol: 'BISON', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].biT10) {\r\n\r\n        return { img: biT10, tokenname: 'BSC Top 10', symbol: 'biT10', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].mockPool) {\r\n\r\n        return { img: biT10, tokenname: 'Mock Pool', symbol: 'moT9', address: coinaddress };\r\n    }\r\n\r\n    return { img: '', tokenname: '', symbol: '', address: coinaddress };;\r\n}\r\n\r\nexport const getCoinAvatar = (coinaddress, chainId) => {\r\n\r\n    if (coinaddress === addresses[chainId].WBNB) {\r\n\r\n        return { img: wbnb, tokenname: 'WRAPPED BNB', symbol: 'WBNB', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].CAKE) {\r\n\r\n        return { img: cake, tokenname: 'CAKE', symbol: 'CAKE', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].SWIPE) {\r\n\r\n        return { img: swipe, tokenname: 'SWIPE', symbol: 'SWIPE', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BAKE) {\r\n\r\n        return { img: bakerytoken, tokenname: 'BAKE', symbol: 'BAKE', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].VENUS) {\r\n\r\n        return { img: venus, tokenname: 'VENUS', symbol: 'VENUS', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].ELLIPSIS) {\r\n\r\n        return { img: ellipsis, tokenname: 'ELLIPSIS', symbol: 'ELLIPSIS', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BANANA) {\r\n\r\n        return { img: banana, tokenname: 'BANANA', symbol: 'BANANA', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].SAFEPAL) {\r\n\r\n        return { img: safepal, tokenname: 'SAFEPAL', symbol: 'SAFEPAL', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].TWT) {\r\n\r\n        return { img: trust, tokenname: 'TRUST WALLET', symbol: 'TWT', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BIFI) {\r\n\r\n        return { img: bifi, tokenname: 'BEEFY FINANCE', symbol: 'BIFI', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].AUTO) {\r\n        return { img: autofarm, tokenname: 'AUTOFARM', symbol: 'AUTO', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BSCPAD) {\r\n\r\n        return { img: bscpad, tokenname: 'BSC PAD', symbol: 'BSCPAD', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BUNNY) {\r\n\r\n        return { img: bunny, tokenname: 'BUNNY', symbol: 'BUNNY', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].BISON) {\r\n\r\n        return { img: bison, tokenname: 'BISON', symbol: 'BISON', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].biT10) {\r\n\r\n        return { img: biT10, tokenname: 'BSC Top 10', symbol: 'biT10', address: coinaddress };\r\n\r\n    } else if (coinaddress === addresses[chainId].mockPool) {\r\n\r\n        return { img: biT10, tokenname: 'Mock Pool', symbol: 'moT9', address: coinaddress };\r\n    }\r\n\r\n    return { img: '', tokenname: '', symbol: '', address: coinaddress };;\r\n}\r\n\r\nexport const percentageOf = (outOff, value) => {\r\n    var result = (Number(value) * 100) / Number(outOff);\r\n    return (result.toString());\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n    return formatter.format()\r\n}\r\n\r\n","import { theme } from '../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    header: {\r\n        width: '100vw',\r\n        padding: '10px',\r\n        backgroundColor: theme.palette.background.main,\r\n        minHeight:'5vh',\r\n        background: 'linear-gradient(90deg, rgba(0,0,0,0) 60%, rgba(219,165,23,0.542454481792717) 160%)',\r\n        borderBottom: theme.palette.header.border\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        color: theme.palette.text.main,\r\n\r\n        fontVariantCaps: 'all-small-caps',\r\n        '&:hover': {\r\n            color: theme.palette.primary,\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },},\r\n    wrapper: {\r\n        display: 'flex',\r\n        margin: '5px',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        padding: '5px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '80px',\r\n        minWidth: '130px',\r\n        color: theme.palette.text.primary,\r\n        \"&:hover\": {\r\n            borderBottom: `solid 6px ${theme.palette.primary.main}`\r\n        }\r\n    },\r\n    nowrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    navwrapper:{\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingLeft: '25%'\r\n    },\r\n    modal: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed'\r\n    },\r\n    logo: {\r\n        height: '5vh',\r\n    },\r\n    headerlogo:{\r\n        margin: '10px'\r\n    }\r\n   \r\n}));","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\nconst useBlock = () => {\r\n  const [block, setBlock] = useState(0)\r\n  const { library } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n\r\n    if (!library) return\r\n    \r\n    const interval = setInterval(async () => {\r\n      const latestBlockNumber = await library.eth.getBlockNumber()\r\n      if (block !== latestBlockNumber) {\r\n        setBlock(latestBlockNumber)\r\n      }\r\n    }, 10000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [library])\r\n\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","  \r\nimport { useState, useEffect } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useBlock from './useBlock'\r\n\r\nconst useBalance = () => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [balance, setBalance] = useState(0)\r\n    const block = useBlock()\r\n\r\n    useEffect(() => {\r\n      if (!!account && !!library) {\r\n        let stale = false\r\n  \r\n        library.eth\r\n          .getBalance(account)\r\n          .then((balance) => {\r\n            if (!stale) {\r\n              setBalance(library.utils.fromWei(balance, 'ether'))\r\n            }\r\n          })\r\n          .catch(() => {\r\n            if (!stale) {\r\n              setBalance(0)\r\n            }\r\n          })\r\n  \r\n        return () => {\r\n          stale = true\r\n          setBalance(undefined)\r\n        }\r\n      }\r\n    }, [account, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\r\n    \r\n    return balance;\r\n}\r\n\r\nexport default useBalance","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\nimport useBlock from './useBlock'\r\n\r\nconst useTokenBalance = (tokenAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [balance, setBalance] = useState(null)\r\n\r\n    const block = useBlock()\r\n\r\n    const fetchBalance = useCallback(async () => {\r\n        const contract = makeContract(library, abis.erc20, tokenAddress);\r\n        const balance = await contract.methods.balanceOf(account).call();\r\n        setBalance(balance)\r\n    }, [account, library, tokenAddress])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && tokenAddress) {\r\n            fetchBalance()\r\n        }\r\n    }, [account, library, block, tokenAddress, fetchBalance])\r\n\r\n    return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport { Button, ButtonGroup, Grid, AppBar, Toolbar, Typography, Modal, Link as MaterialLink} from '@material-ui/core'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Link } from 'react-router-dom'\r\nimport { formatter } from '../../utils/utils'\r\nimport { useStyles } from './Header.styles'\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport BiSharesLogo from '../../assets/logos/BiSharesLogo@2x.png';\r\n\r\nimport useBalance from '../../hooks/useBalance';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\n\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nimport WalletModal from '../walletmodal/WalletModal.component'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n\r\nconst Header = ({title, nav1, nav2, nav3, provider, loadWeb3Modal, logoutOfWeb3Modal}) => {\r\n    const { account, library } = useWeb3React();\r\n    const [ connected, setConnected ] = React.useState('contained');\r\n    const [ isShown, setIsShown ] = React.useState(false)\r\n    const accountBalance = useBalance();\r\n    const classes = useStyles();\r\n  \r\n    React.useEffect(() => {\r\n        if(account) {\r\n           \r\n        }\r\n    }, [account, accountBalance])\r\n\r\n    return (\r\n        <AppBar position='relative' color='transparent' elevation={1} >\r\n            <Toolbar className={classes.header}>\r\n                <Grid \r\n                    container\r\n                    spacing={0}\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item xs={3} className={classes.headerlogo}>  \r\n                        <Grid item xs={12}>\r\n                            <Link to='/'> \r\n                                <img src={BiSharesLogo} alt='BiShares Index' className={classes.logo}/>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" item xs={12}>\r\n                            <Grid item >\r\n                                <Typography variant='h4' color='primary'>\r\n                                    Bi\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography variant='h4' color='textPrimary'>\r\n                                    Shares\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    \r\n                    <Grid item xs >\r\n\r\n                    </Grid>\r\n                    <Grid item xs className={classes.navwrapper} >\r\n                        <ButtonGroup>\r\n                            <Button\r\n                                size=\"medium\"\r\n                                color=\"primary\"\r\n                                variant='outlined'\r\n                                className={classes.button}\r\n                                component={Link}\r\n                                to='/dashboard'\r\n                            >\r\n                                <Grid container >\r\n                                    <Grid item xs={12} className={classes.wrapper}>\r\n                                        <DashboardIcon/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.wrapper}>\r\n                                        <Typography variant='subtitle1'>\r\n                                            Dashboard\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Button> \r\n                            \r\n                            <Button\r\n                                size=\"medium\"\r\n                                variant={account ? 'outlined': 'contained'}\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                onMouseEnter={() => setIsShown(true)}\r\n                                onMouseLeave={() => setIsShown(false)}\r\n                                onClick={\r\n                                    () => {\r\n                                    if (!provider) {\r\n                                    loadWeb3Modal();\r\n                                    } else {\r\n                                    logoutOfWeb3Modal();\r\n                                    }\r\n                                    }\r\n                                }\r\n                                >\r\n                                <Grid container >\r\n                                    <Grid item xs={12}>\r\n                                        <AccountBalanceWalletIcon />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography variant='subtitle1'>\r\n                                            Wallet\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Button> \r\n                        </ButtonGroup>\r\n                    </Grid>    \r\n               \r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>  \r\n    )\r\n};\r\n\r\nexport default Header;","import { theme } from '../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  modal: {   \r\n    borderRadius: '15px',\r\n  },\r\n  card:{\r\n    padding: '35px',\r\n    minWidth: '23%',\r\n    maxWidth: '40%',\r\n    minHeight: '35%',\r\n    borderRadius: '15px',\r\n    backgroundColor: theme.palette.paper.main,\r\n    color: theme.palette.text.primary,\r\n  }\r\n});","import { theme } from '../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    footer: {\r\n        width: '100vw',\r\n        backgroundColor: theme.palette.footer.main,\r\n        borderTop: `3px solid ${theme.palette.primary.main}`,\r\n        minHeight:'15vh',\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        color: theme.palette.text.primary,\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },},\r\n    wrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    nowrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    modal: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed'\r\n    },\r\n}));","import React from \"react\";\r\n\r\nconst Icon = (props) => {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 71 55\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n      <g clip-path=\"url(#clip0)\">\r\n        <path\r\n          d=\"M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.28 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z\"\r\n          fill=\"#c9c4d4\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0\">\r\n          <rect width=\"71\" height=\"55\" fill=\"white\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react'\r\nimport { Grid, AppBar, Toolbar, Typography, Modal, Link as MaterialLink} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { useStyles } from './Footer.styles'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useBlock from '../../hooks/useBlock';\r\n\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport { DiscordIcon } from '../icons';\r\nimport { AiFillMediumSquare } from 'react-icons/ai';\r\n\r\n\r\nconst Footer = ({title, nav1, nav2, nav3}) => {\r\n    const { account } = useWeb3React();\r\n    const classes = useStyles();\r\n    const block = useBlock();\r\n    \r\n    React.useEffect(() => {\r\n       \r\n    }, [account, block])\r\n\r\n    return (\r\n        <AppBar position='relative' color='transparent' elevation={1} >\r\n            <Toolbar className={classes.footer}>\r\n                <Grid \r\n                    container\r\n                    justify='space-between'\r\n                    spacing={2}\r\n                >\r\n                \r\n                <Grid container item direction='column' xs={3}>\r\n                    <Grid \r\n                        container\r\n                        item\r\n                        spacing={2}\r\n                        alignItems=\"center\"\r\n                        justify=\"flex-start\"\r\n                    >\r\n                        <Grid item >\r\n                            <Typography \r\n                                className={classes.title}  \r\n                                component={MaterialLink}\r\n                                color=\"textPrimary\"\r\n                                variant=\"subtitle1\" \r\n                                target=\"_blank\" \r\n                                href='https://bishares.finance/assets/docs/bishares-gordian-audit.pdf'\r\n                                noWrap\r\n                            >\r\n                                Gordian Audit \r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Typography \r\n                                className={classes.title}  \r\n                                color=\"textPrimary\"\r\n                                variant=\"subtitle1\" \r\n                                noWrap\r\n                            >\r\n                                |\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Typography \r\n                                className={classes.title}  \r\n                                component={MaterialLink}\r\n                                color=\"textPrimary\"\r\n                                variant=\"subtitle1\" \r\n                                target=\"_blank\" \r\n                                href='https://bishares.finance/assets/docs/bishares-defiyield-audit.pdf'\r\n                                noWrap\r\n                            >\r\n                                DefiYield Audit\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid \r\n                        container\r\n                        item\r\n                        spacing={2}\r\n                        alignItems=\"center\"\r\n                        justify=\"flex-start\"\r\n                    >\r\n                        <Grid item  >\r\n                            <Typography \r\n                                className={classes.title} \r\n                                component={MaterialLink}\r\n                                style={{textDecoration: 'none'}}\r\n                                href='https://twitter.com/BiSharesFinance'\r\n                                target=\"_blank\" \r\n                                color=\"textPrimary\"\r\n                                variant=\"h5\" \r\n                                noWrap\r\n                            >\r\n                                <TwitterIcon />\r\n                            </Typography>\r\n                        </Grid> \r\n                        <Grid item  >\r\n                            <Typography \r\n                                className={classes.title} \r\n                                component={MaterialLink}\r\n                                style={{textDecoration: 'none'}}\r\n                                href='https://github.com/bisharesindexfund'\r\n                                target=\"_blank\" \r\n                                color=\"textPrimary\"\r\n                                variant=\"h5\" \r\n                                noWrap\r\n                            >\r\n                                <GitHubIcon />\r\n                            </Typography>\r\n                        </Grid> \r\n                        <Grid item  >\r\n                            <Typography \r\n                                className={classes.title} \r\n                                component={MaterialLink}\r\n                                style={{textDecoration: 'none'}}\r\n                                href='https://t.me/bishares'\r\n                                target=\"_blank\" \r\n                                color=\"textPrimary\"\r\n                                variant=\"h5\" \r\n                                noWrap\r\n                            >\r\n                                <TelegramIcon />\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item  >\r\n                            <Typography \r\n                                className={classes.title} \r\n                                component={MaterialLink}\r\n                                style={{textDecoration: 'none'}}\r\n                                href='https://bi-shares.medium.com'\r\n                                target=\"_blank\" \r\n                                color=\"textPrimary\"\r\n                                variant=\"h5\" \r\n                                noWrap\r\n                            >\r\n                                <AiFillMediumSquare style={{ fontSize: '24px' }} />\r\n                            </Typography>\r\n                        </Grid>  \r\n                        <Grid item  >\r\n                            <Typography \r\n                                className={classes.title} \r\n                                component={MaterialLink}\r\n                                style={{textDecoration: 'none'}}\r\n                                href='https://discord.com/invite/w2jejq5rBP'\r\n                                target=\"_blank\" \r\n                                color=\"textPrimary\"\r\n                                variant=\"h5\" \r\n                                noWrap\r\n                            >\r\n                                <DiscordIcon />\r\n                            </Typography>\r\n                        </Grid> \r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n                    \r\n                <Grid \r\n                    container item xs={3}\r\n                    spacing={2}\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                >\r\n                    <Grid item >\r\n                        {account ?\r\n                            <Typography \r\n                                className={classes.title} \r\n                                color=\"textPrimary\"\r\n                                variant=\"caption\" \r\n                                noWrap\r\n                            >\r\n                                🟢 Block: {block == 0 ? 'Loading....' : block}\r\n                            </Typography>\r\n                        :\r\n                            <Typography \r\n                                className={classes.title} \r\n                                color=\"textPrimary\"\r\n                                variant=\"caption\" \r\n                                noWrap\r\n                            >\r\n                                🔴 Block: ?\r\n                            </Typography>\r\n                        } \r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Typography \r\n                            className={classes.title}  \r\n                            color=\"textPrimary\"\r\n                            variant=\"caption\" \r\n                            noWrap\r\n                        >\r\n                            © 2021 by Bishares Finance\r\n                        </Typography>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n             \r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>  \r\n    )\r\n};\r\n\r\nexport default Footer;","import { theme } from '../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    container: {\r\n      padding: '30px',\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: theme.palette.background.main,\r\n      minHeight: '80vh'\r\n      },\r\n    button: {\r\n        color: theme.palette.text.primary, \r\n    },\r\n    title: {\r\n      textShadow: `0px 4px 12px ${theme.palette.secondary.main}`\r\n    },\r\n    backgroundVideo: {\r\n      position: 'fixed', zIndex: '-99', width: '100vw', height: '100vh'\r\n    },\r\n    subcontainer: {\r\n     height: '100%'\r\n    }\r\n\r\n    })\r\n);","import { theme } from '../../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n    card: {\r\n        height: '100%',\r\n        backgroundColor: theme.palette.paper.main,\r\n        color: theme.palette.text.primary,\r\n        borderRadius: theme.palette.border.radius,\r\n        border: theme.palette.border.color,\r\n    },\r\n    header: {\r\n        // height: '15vh',\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.main,\r\n        background: 'linear-gradient(90deg, rgba(0,0,0,0) 60%, rgba(219,165,23,0.542454481792717) 160%)',\r\n        borderBottom: theme.palette.border.color,\r\n    },\r\n    button: {\r\n        padding: '5px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '60px',\r\n        minWidth: '130px',\r\n        color: theme.palette.text.primary,\r\n        \"&:hover\": {\r\n            borderBottom: `solid 6px ${theme.palette.primary.main}`\r\n        }\r\n    },\r\n    content: {\r\n        padding: '25px',\r\n        color: theme.palette.text.main \r\n    },\r\n    nowrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n    avatar: {\r\n        minWidth: '70px',\r\n        minHeight: '70px',\r\n        backgroundColor: theme.palette.text.primary\r\n    },\r\n    avatarImage: {\r\n        maxWidth: '70px'\r\n    },\r\n    actions: {\r\n        minWidth: '250px'\r\n    }\r\n});","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 14,\r\n    borderRadius: 1,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: theme.palette.background.main,\r\n  },\r\n  bar: {\r\n    borderRadius: 1,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \r\n  },\r\n});\r\n\r\nexport default function ProgressBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <BorderLinearProgress variant=\"determinate\" value={props.percentage} />\r\n    </div>\r\n  );\r\n}","import { theme } from '../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n       minWidth: '280px',\r\n    },\r\n    avatar: {\r\n        minWidth: '50px',\r\n        minHeight: '50px'\r\n    },\r\n});","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst useName = (tokenAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [name, setName] = useState('')\r\n\r\n    const fetchName = useCallback(async () => {\r\n        const contract = makeContract(library, abis.erc20, tokenAddress);\r\n        const _name = await contract.methods.name().call();\r\n        setName(_name.toString())\r\n    }, [library, tokenAddress])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && tokenAddress) {\r\n            fetchName()\r\n        }\r\n    }, [account, library, chainId, tokenAddress, fetchName])\r\n\r\n    return name\r\n}\r\n\r\nexport default useName\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst useSymbol = (tokenAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [symbol, setSymbol] = useState('')\r\n\r\n    const fetchSymbol = useCallback(async () => {\r\n        const contract = makeContract(library, abis.erc20, tokenAddress);\r\n        const _symbol = await contract.methods.symbol().call();\r\n        setSymbol(_symbol.toString())\r\n    }, [library, tokenAddress])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && tokenAddress) {\r\n            fetchSymbol()\r\n        }\r\n    }, [account, library, chainId, tokenAddress, fetchSymbol])\r\n\r\n    return symbol;\r\n}\r\n\r\nexport default useSymbol;\r\n","import { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from './utils';\r\n\r\nexport const getPool = (library, chainId) => {\r\n    return makeContract(library, abis.indexpool, addresses[chainId].biT10);\r\n}\r\n\r\nexport const getOracle = (library, chainId) => {\r\n    return makeContract(library, abis.uniswapV2oracle, addresses[chainId].uniswapV2oracle);\r\n}\r\n\r\nexport const getSeller = (library, chainId) => {\r\n    return makeContract(library, abis.indexseller, addresses[chainId].indexseller);\r\n}","import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst BnbPriceContext = createContext(undefined);\r\nconst updatedIntervalSec = 10 * 1000;\r\n\r\nexport function BnbPriceContextProvider({ children }) {\r\n  const [price, setPrice] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const updatePrice = () =>\r\n      fetch('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd')\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          const { binancecoin: { usd: price } } = res;\r\n          setPrice(price)\r\n        })\r\n\r\n    updatePrice()\r\n    try {\r\n\r\n      setInterval(() => {\r\n        updatePrice()\r\n      }, updatedIntervalSec);\r\n    } catch (error) {\r\n\r\n    }\r\n  }, []);\r\n\r\n  return <BnbPriceContext.Provider value={price}>\r\n    {children}\r\n  </BnbPriceContext.Provider>\r\n}\r\n\r\nexport const useBnbPriceState = () => {\r\n  return useContext(BnbPriceContext);\r\n};\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { SHORT_TWAP_MIN, SHORT_TWAP_MAX } from '../utils/utils';\r\nimport { getOracle } from '../utils/contracts';\r\nimport useBlock from './useBlock'\r\nimport { useBnbPriceState } from '../state/bnbPriceContext'\r\n\r\nconst useAveragePrice = (tokenAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [price, setPrice] = useState('0')\r\n    const block = useBlock()\r\n    const bnbUsdPrice = useBnbPriceState()\r\n\r\n    const fetchPrice = useCallback(async (_tokenAddress) => {\r\n        const contract = getOracle(library, chainId);\r\n        const _price = await contract.methods.computeAverageTokenPrice(\r\n            _tokenAddress,\r\n            SHORT_TWAP_MIN,\r\n            SHORT_TWAP_MAX\r\n        ).call();\r\n        const usePrice = new BigNumber(_price).div(2 ** 112).times(bnbUsdPrice)\r\n        setPrice(usePrice);\r\n    }, [bnbUsdPrice, chainId, library])\r\n\r\n    useEffect(() => {\r\n        if (account && library && tokenAddress) {\r\n            fetchPrice(tokenAddress)\r\n        }\r\n    }, [account, library, tokenAddress, chainId, block, fetchPrice])\r\n\r\n    return price\r\n}\r\n\r\nexport default useAveragePrice\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst usePoolTokenBalance = (poolAddress, tokenAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [balance, setBalance] = useState()\r\n\r\n    const fetchBalance = useCallback(async () => {\r\n        const contract = makeContract(library, abis.indexpool, poolAddress);\r\n        const _balance = await contract.methods.getBalance(tokenAddress).call();\r\n        setBalance(_balance);\r\n    }, [library, poolAddress, tokenAddress])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && tokenAddress) {\r\n            fetchBalance()\r\n        }\r\n\r\n    }, [account, library, tokenAddress, chainId, fetchBalance])\r\n\r\n    return balance\r\n}\r\n\r\nexport default usePoolTokenBalance\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\nimport { getPool } from '../utils/contracts';\r\nimport useBlock from './useBlock'\r\n\r\nconst useTokenWeight = (poolAddress, tokenAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [tokenWeight, setTokenWeight] = useState()\r\n\r\n    const fetchWeight = useCallback(async () => {\r\n        const contract = makeContract(library, abis.indexpool, poolAddress);\r\n        const _tokenWeight = await contract.methods.getDenormalizedWeight(tokenAddress).call();\r\n        setTokenWeight(_tokenWeight);\r\n    }, [library, poolAddress, tokenAddress])\r\n\r\n    useEffect(() => {\r\n        if (account && library && tokenAddress) {\r\n            fetchWeight()\r\n        }\r\n    }, [account, library, tokenAddress, chainId, fetchWeight])\r\n\r\n    return tokenWeight\r\n}\r\n\r\nexport default useTokenWeight\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\nimport useBlock from './useBlock'\r\nimport useName from './useName'\r\nimport useSymbol from './useSymbol'\r\n\r\nimport useAveragePrice from './useAveragePrice';\r\nimport usePoolTokenBalance from './usePoolTokenBalance';\r\nimport usePoolTokenWeight from './usePoolTokenWeight';\r\n\r\nimport { getTokenAvatar } from '../utils/utils';\r\n\r\nconst usePoolTokenInfo = (poolAddress, poolToken) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [info, setInfo] = useState({});\r\n    const block = useBlock();\r\n\r\n    const tokenName = useName(poolToken);\r\n    const tokenSymbol = useSymbol(poolToken);\r\n    const tokenBalance = usePoolTokenBalance(poolAddress, poolToken);\r\n    const tokenWeight = usePoolTokenWeight(poolAddress, poolToken);\r\n    const averagePrice = useAveragePrice(poolToken);\r\n\r\n    const fetchInfo = useCallback(async (_poolToken, _name, _symbol, _tokenBalance, _tokenWeight, _averagePrice) => {\r\n        const avatar = getTokenAvatar(_poolToken, chainId);\r\n        const _info = {\r\n            address: _poolToken,\r\n            name: _name,\r\n            symbol: _symbol,\r\n            balance: _tokenBalance,\r\n            weight: _tokenWeight,\r\n            averagePrice: _averagePrice,\r\n            img: avatar.img\r\n        };\r\n        setInfo(_info);\r\n    }, [chainId])\r\n\r\n    useEffect(() => {\r\n        if (account && library && poolToken && tokenName && tokenSymbol && tokenBalance && tokenWeight && averagePrice) {\r\n            fetchInfo(poolToken, tokenName, tokenSymbol, tokenBalance, tokenWeight, averagePrice)\r\n        }\r\n\r\n    }, [account, poolAddress, poolToken, tokenBalance, tokenWeight, averagePrice, block, library, tokenName, tokenSymbol, fetchInfo]);\r\n\r\n    return info\r\n}\r\n\r\nexport default usePoolTokenInfo;\r\n","import React from 'react';\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ProgressBar from '../progressbar/ProgressBar.component';\r\n\r\nimport { formatter } from '../../utils/utils'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useStyles } from './TokenInfo.styles';\r\n\r\nimport usePoolTokenInfo from '../../hooks/usePoolTokenInfo';\r\n\r\nconst TokenInfo = ({ poolInfo, poolToken, handleSetUsdValue }) => {\r\n    const { library } = useWeb3React();\r\n    const [weightPercentage, setWeightPercentage] = React.useState(0);\r\n    const [usdValue, setUsdValue] = React.useState(0);\r\n\r\n    const poolTokenInfo = usePoolTokenInfo(poolInfo.address, poolToken);\r\n\r\n    const classes = useStyles();\r\n\r\n    React.useEffect(() => {\r\n        if (poolTokenInfo && poolInfo && poolInfo.totalWeight) {\r\n            const percentage = ((100 * Number(poolTokenInfo.weight)) / Number(poolInfo.totalWeight));\r\n            setWeightPercentage(percentage);\r\n        }\r\n\r\n    }, [poolInfo, poolToken, poolTokenInfo])\r\n\r\n    React.useEffect(() => {\r\n        if (poolTokenInfo && poolTokenInfo.averagePrice) {\r\n            const tokenUsdValue = new BigNumber(poolTokenInfo.averagePrice).times(poolTokenInfo.balance).div(1e18).toNumber()\r\n            setUsdValue(tokenUsdValue);\r\n        }\r\n\r\n    }, [poolInfo, poolToken, poolTokenInfo])\r\n\r\n    React.useEffect(() => {\r\n        handleSetUsdValue(poolToken, usdValue)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [usdValue])\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={1}\r\n            className={classes.root}\r\n            direction='row'\r\n        >\r\n            { poolTokenInfo ?\r\n                <>\r\n                    <Grid item>\r\n                        <Avatar src={poolTokenInfo.img} className={classes.avatar} />\r\n                    </Grid>\r\n                    <Grid container item xs>\r\n                        <Grid\r\n                            container\r\n                            item\r\n                            xs={12}\r\n                            alignItems=\"flex-start\"\r\n                            spacing={0}\r\n                        >\r\n                            <Grid item lg={3}>\r\n                                <Typography variant=\"caption\" color='textPrimary'>\r\n                                    [{poolTokenInfo.symbol}]\r\n                            </Typography>\r\n                            </Grid>\r\n                            <Grid item lg={3}>\r\n                                <Typography variant=\"caption\" color='textPrimary' noWrap>\r\n                                    {poolTokenInfo.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid container item lg={12} spacing={0} justify='flex-end'>\r\n                                <Grid item >\r\n                                    <Typography variant=\"caption\" color='primary' noWrap>\r\n                                        {poolTokenInfo.balance ? formatter.format(Number(library.utils.fromWei(poolTokenInfo.balance, 'ether'))) : ''}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <Typography variant=\"caption\" color='primary' noWrap>\r\n                                        {poolTokenInfo.symbol}= {' '}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item >\r\n                                    <Typography variant=\"caption\" color='primary' noWrap>\r\n                                        {' '}${formatter.format(usdValue)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <ProgressBar percentage={weightPercentage ? weightPercentage : '0'} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nTokenInfo.defaultProps = {\r\n    handleSetUsdValue: () => { }\r\n}\r\n\r\nexport default TokenInfo;\r\n\r\n/*\r\n<Grid item lg={3}>\r\n    <Typography variant=\"caption\"  color='textPrimary'>\r\n        [{tokenAvatar.symbol}]\r\n    </Typography>\r\n</Grid>\r\n<Grid item lg>\r\n    <Typography variant=\"caption\"  color='textPrimary' noWrap>\r\n        {tokenAvatar.tokenname}\r\n    </Typography>\r\n</Grid>\r\n<Grid container item lg={12} spacing={1} justify='flex-end'>\r\n    <Grid item >\r\n        <Typography variant=\"caption\"  color='primary' noWrap>\r\n            {balance ? (Number(library.utils.fromWei( balance.toString(), 'ether'))).toFixed(6) : ''}\r\n        </Typography>\r\n    </Grid>\r\n    <Grid item >\r\n        <Typography variant=\"caption\"  color='primary' noWrap>\r\n            {tokenAvatar.symbol} =\r\n        </Typography>\r\n    </Grid>\r\n    <Grid item >\r\n        <Typography variant=\"caption\"  color='primary' noWrap>\r\n            $ {formatter.format(Number(priceValue)) }\r\n        </Typography>\r\n    </Grid>\r\n</Grid>\r\n\r\n\r\n<Grid item xs={12}>\r\n    <ProgressBar percentage={weightPercentage ? weightPercentage : '0'}/>\r\n</Grid>\r\n*/","import React, { useCallback, useMemo, useState } from 'react';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Link\r\n} from '@material-ui/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport MaterialCard from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\nimport { useStyles } from './InfoCard.styles';\r\nimport { formatter } from '../../../utils/utils'\r\nimport TokenInfo from '../../tokeninfo/TokenInfo.component'\r\n\r\nconst PoolContent = ({ poolInfo, handleSetUsdValue }) => {\r\n\r\n    if (!poolInfo) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                poolInfo.tokens.map((token) => (\r\n                    <Grid container item lg={6} key={token.address} justify='center' alignItems='center'>\r\n                        <TokenInfo\r\n                            poolInfo={poolInfo}\r\n                            poolToken={token}\r\n                            handleSetUsdValue={handleSetUsdValue}\r\n                        />\r\n                    </Grid>)\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst InfoCard = ({ poolInfo }) => {\r\n    const { chainId, library } = useWeb3React();\r\n    const classes = useStyles();\r\n    const [usdValueTokensMap, setUsdValueTokensMap] = useState({});\r\n    const [tvl, setTvl] = useState(new BigNumber(0));\r\n\r\n    const handleSetUsdValue = useCallback((token, valueBN) => {\r\n        setUsdValueTokensMap((prevUsdValueTokensMap) => ({ ...prevUsdValueTokensMap, [token]: valueBN }));\r\n        const valuesArray = Object.values(usdValueTokensMap);\r\n        if (valuesArray.length) {\r\n            setTvl(new BigNumber.sum(...valuesArray))\r\n        }\r\n    }, [usdValueTokensMap]);\r\n\r\n    return (\r\n        <MaterialCard className={classes.card}>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n            >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar className={classes.avatar} >\r\n                            <img src={poolInfo ? poolInfo.img : ''} className={classes.avatarImage} />\r\n                        </Avatar>\r\n                    }\r\n                    subheader={\r\n                        <Grid\r\n                            container\r\n                            alignItems='flex-start'\r\n                        >\r\n                            <Grid container item lg={3} >\r\n                                <Grid item>\r\n                                    <Typography variant='h6' color='textPrimary'>\r\n                                        {poolInfo ? poolInfo.name : ''}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid container item lg={3} spacing={1} alignItems='center' >\r\n                                <Grid item>\r\n                                    <Typography variant='h6' color='textPrimary'>\r\n                                        $ 0.00\r\n                                    </Typography>\r\n                                </Grid>\r\n                                    <Typography variant='h6' color='primary'>\r\n                                        (\r\n                                    </Typography>\r\n                                <Grid item>\r\n                                    <Typography variant='h6' color='error'>\r\n                                        + 0.00 %\r\n                                    </Typography>\r\n                                </Grid>\r\n                                    <Typography variant='h6' color='primary'>\r\n                                        )\r\n                                    </Typography>     \r\n                            </Grid> */}\r\n                            <Grid container item className={classes.actions} alignItems='flex-start' direction='row'>\r\n                                <Grid container item xs direction='column' spacing={0} >\r\n                                    <Grid item >\r\n                                        <Typography variant='caption' color='primary'>\r\n                                            ADDRESS:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='primary'>\r\n                                            SUPPLY:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Typography variant='caption' color='primary'>\r\n                                            VOLUME: \r\n                                        </Typography>\r\n                                    </Grid> */}\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='primary'>\r\n                                            TVL:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container item xs direction='column' spacing={0} >\r\n                                    <Grid item >\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            color='primary'\r\n                                            component={Link}\r\n                                            style={{ textDecoration: 'none' }}\r\n                                            href={poolInfo && chainId == 97 ? `https://testnet.bscscan.com/address/${poolInfo.address}` : `https://bscscan.com/address/${poolInfo.address}`}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            {poolInfo ? poolInfo.address : ''}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='textPrimary'>\r\n                                            {poolInfo ? library.utils.fromWei(poolInfo.totalSupply.toString(), 'ether') : ''}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Typography variant='caption' color='textPrimary'>\r\n                                            *volume* \r\n                                        </Typography>\r\n                                    </Grid> */}\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='textPrimary'>\r\n                                            ${formatter.format(tvl.toNumber())}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                    className={classes.header}\r\n                />\r\n                <Grid\r\n                    container\r\n                    item\r\n                    xs={12}\r\n                    spacing={4}\r\n                    alignItems='center'\r\n                    justify='center'\r\n                    className={classes.content}\r\n                >\r\n                    <PoolContent poolInfo={poolInfo} handleSetUsdValue={handleSetUsdValue} />\r\n                </Grid>\r\n            </Grid>\r\n        </MaterialCard>\r\n    )\r\n}\r\n\r\nexport default InfoCard;\r\n\r\n/*\r\n\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n\r\n            >\r\n                    <CardHeader\r\n                        avatar={\r\n                        <Avatar className={classes.avatar} >\r\n                           <img src={poolAvatar.img} className={classes.avatarImage}/>\r\n                        </Avatar>\r\n                        }\r\n                        subheader={\r\n                        <Grid\r\n                            container\r\n                            alignItems='flex-start'\r\n                        >\r\n                            <Grid container item lg={3} >\r\n                                <Grid item>\r\n                                    <Typography variant='h6' color='textPrimary'>\r\n                                        {poolInfo ? poolInfo.name : ''}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container item lg={3} spacing={1} alignItems='center' >\r\n                                <Grid item>\r\n                                    <Typography variant='h6' color='textPrimary'>\r\n                                        $ 0.00\r\n                                    </Typography>\r\n                                </Grid>\r\n                                    <Typography variant='h6' color='primary'>\r\n                                        (\r\n                                    </Typography>\r\n                                <Grid item>\r\n                                    <Typography variant='h6' color='error'>\r\n                                        + 0.00 %\r\n                                    </Typography>\r\n                                </Grid>\r\n                                    <Typography variant='h6' color='primary'>\r\n                                        )\r\n                                    </Typography>\r\n                            </Grid>\r\n                            <Grid container item  className={classes.actions} alignItems='flex-start' direction='row'>\r\n                                <Grid container item xs direction='column' spacing={0} >\r\n                                    <Grid item >\r\n                                        <Typography variant='caption' color='primary'>\r\n                                            ADDRESS:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='primary'>\r\n                                            SUPPLY:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='primary'>\r\n                                            VOLUME:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='primary'>\r\n                                            TVL:\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container item xs  direction='column' spacing={0} >\r\n                                    <Grid item >\r\n                                        <Typography\r\n                                            variant='caption'\r\n                                            color='primary'\r\n                                            component={Link}\r\n                                            style={{textDecoration: 'none'}}\r\n                                            href={chainId == 97 ? `https://testnet.bscscan.com/address/${poolAddress}` : `https://testnet.bscscan.com/address/${poolAddress}`}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            {poolAddress ? poolAddress : ''}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='textPrimary'>\r\n                                            {totalSupply && library ? library.utils.fromWei(totalSupply.toString(), 'ether') : '0'}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='textPrimary'>\r\n                                            *volume*\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant='caption' color='textPrimary'>\r\n                                            *tvl*\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        }\r\n\r\n                        className={classes.header}\r\n                    />\r\n                <Grid\r\n                    container\r\n                    item\r\n                    xs={12}\r\n                    spacing={4}\r\n                    alignItems='center'\r\n                    justify='center'\r\n                    className={classes.content}\r\n                >\r\n                    <PoolContent poolTokens={currentTokens} poolAddress={poolAddress}/>\r\n                </Grid>\r\n            </Grid>\r\n\r\n*/","import { theme } from '../../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n    card: {\r\n        height: '100%',\r\n        backgroundColor: theme.palette.paper.main,\r\n        color: theme.palette.text.primary,\r\n        borderRadius: theme.palette.border.radius,\r\n        border: theme.palette.border.color,\r\n    },\r\n    header: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.main,\r\n        background: 'linear-gradient(90deg, rgba(0,0,0,0) 60%, rgba(219,165,23,0.542454481792717) 160%)',\r\n        borderBottom: theme.palette.border.color,\r\n    },\r\n    button: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        width:'100%',\r\n        padding: '5px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '60px',\r\n        color: theme.palette.text.primary,\r\n        \"&:hover\": {\r\n            borderBottom: `solid 6px ${theme.palette.primary.main}`\r\n        }\r\n    },\r\n    content: {\r\n        padding: '25px',\r\n        color: theme.palette.text.main \r\n    },\r\n    nowrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n    difference: {\r\n        color: `${theme.palette.green.main} !important`\r\n    }\r\n});","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\n\r\n\r\nconst useCurrentTokens = (poolAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [tokens, setTokens] = useState([])\r\n\r\n\r\n    const fetchCurrentTokens = useCallback(async () => {\r\n        const contract = makeContract(library, abis.indexpool, poolAddress);\r\n        const _tokens = await contract.methods.getCurrentTokens().call();\r\n        setTokens(_tokens);\r\n    }, [library, poolAddress])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && chainId) {\r\n            fetchCurrentTokens()\r\n        }\r\n\r\n    }, [account, chainId, fetchCurrentTokens, library])\r\n\r\n    return tokens\r\n}\r\n\r\nexport default useCurrentTokens\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const BONE = new BigNumber(10).pow(18);\r\nexport const EXIT_FEE = new BigNumber(10).pow(16);\r\nexport const TWOBONE = BONE.times(new BigNumber(2));\r\nconst BPOW_PRECISION = BONE.idiv(new BigNumber(10).pow(10));\r\n\r\nexport const MAX_IN_RATIO = BONE.times(new BigNumber(0.499999999999999)); // Leave some room for bignumber rounding errors\r\nexport const MAX_OUT_RATIO = BONE.times(new BigNumber(0.333333333333333)); // Leave some room for bignumber rounding errors\r\nexport const MIN_WEIGHT = BONE.div(4);\r\n\r\nexport function scale(input, decimalPlaces) {\r\n  const scalePow = new BigNumber(decimalPlaces.toString());\r\n  const scaleMul = new BigNumber(10).pow(scalePow);\r\n  return input.times(scaleMul);\r\n}\r\n\r\nexport function bnum(val) {\r\n  return new BigNumber(val?.toString());\r\n}\r\n\r\nexport function calcOutGivenIn(\r\n  tokenBalanceIn,\r\n  tokenWeightIn,\r\n  tokenBalanceOut,\r\n  tokenWeightOut,\r\n  tokenAmountIn,\r\n  swapFee\r\n) {\r\n  let weightRatio = bdiv(tokenWeightIn, tokenWeightOut);\r\n  let adjustedIn = BONE.minus(swapFee);\r\n  adjustedIn = bmul(tokenAmountIn, adjustedIn);\r\n  let y = bdiv(tokenBalanceIn, tokenBalanceIn.plus(adjustedIn));\r\n  let foo = bpow(y, weightRatio);\r\n  let bar = BONE.minus(foo);\r\n  let tokenAmountOut = bmul(tokenBalanceOut, bar);\r\n  return tokenAmountOut;\r\n}\r\n\r\nexport function calcInGivenOut(\r\n  tokenBalanceIn,\r\n  tokenWeightIn,\r\n  tokenBalanceOut,\r\n  tokenWeightOut,\r\n  tokenAmountOut,\r\n  swapFee\r\n) {\r\n  let weightRatio = bdiv(tokenWeightOut, tokenWeightIn);\r\n  let diff = tokenBalanceOut.minus(tokenAmountOut);\r\n  let y = bdiv(tokenBalanceOut, diff);\r\n  let foo = bpow(y, weightRatio);\r\n  foo = foo.minus(BONE);\r\n  let tokenAmountIn = BONE.minus(swapFee);\r\n  tokenAmountIn = bdiv(bmul(tokenBalanceIn, foo), tokenAmountIn);\r\n  return tokenAmountIn;\r\n}\r\n\r\nexport function calcSpotPrice(\r\n  tokenBalanceIn,\r\n  tokenWeightIn,\r\n  tokenBalanceOut,\r\n  tokenWeightOut,\r\n  swapFee\r\n) {\r\n  const numer = bdiv(tokenBalanceIn, tokenWeightIn);\r\n  const denom = bdiv(tokenBalanceOut, tokenWeightOut);\r\n  const ratio = bdiv(numer, denom);\r\n  const scale = bdiv(BONE, bsubSign(BONE, swapFee).res);\r\n  return bmul(ratio, scale);\r\n}\r\n\r\nexport function calcAllInGivenPoolOut(\r\n  tokenBalances,\r\n  poolSupply,\r\n  poolAmountOut\r\n) {\r\n  const ratio = bdiv(bnum(poolAmountOut), bnum(poolSupply));\r\n  const amountsIn = [];\r\n  for (let i = 0; i < tokenBalances.length; i++) {\r\n    const balance = bnum(tokenBalances[i]);\r\n    amountsIn.push(bmul(ratio, balance).toFixed());\r\n  }\r\n  return amountsIn;\r\n}\r\n\r\nexport function calcPoolOutGivenSingleIn(\r\n  tokenBalanceIn,\r\n  tokenWeightIn,\r\n  poolSupply,\r\n  totalWeight,\r\n  tokenAmountIn,\r\n  swapFee\r\n) {\r\n  const normalizedWeight = bdiv(tokenWeightIn, totalWeight);\r\n  const zaz = bmul(BONE.minus(normalizedWeight), swapFee);\r\n  const tokenAmountInAfterFee = bmul(tokenAmountIn, BONE.minus(zaz));\r\n\r\n  const newTokenBalanceIn = tokenBalanceIn.plus(tokenAmountInAfterFee);\r\n  const tokenInRatio = bdiv(newTokenBalanceIn, tokenBalanceIn);\r\n\r\n  const poolRatio = bpow(tokenInRatio, normalizedWeight);\r\n  const newPoolSupply = bmul(poolRatio, poolSupply);\r\n  const poolAmountOut = newPoolSupply.minus(poolSupply);\r\n  return poolAmountOut;\r\n}\r\n\r\nexport function calcPoolInGivenSingleOut(\r\n  tokenBalanceOut,\r\n  tokenWeightOut,\r\n  poolSupply,\r\n  totalWeight,\r\n  tokenAmountOut,\r\n  swapFee\r\n) {\r\n  const normalizedWeight = bdiv(tokenWeightOut, totalWeight);\r\n  const zoo = BONE.minus(normalizedWeight);\r\n  const zar = bmul(zoo, swapFee);\r\n  const tokenAmountOutBeforeSwapFee = bdiv(tokenAmountOut, BONE.minus(zar));\r\n\r\n  const newTokenBalanceOut = tokenBalanceOut.minus(\r\n      tokenAmountOutBeforeSwapFee\r\n  );\r\n  const tokenOutRatio = bdiv(newTokenBalanceOut, tokenBalanceOut);\r\n\r\n  const poolRatio = bpow(tokenOutRatio, normalizedWeight);\r\n  const newPoolSupply = bmul(poolRatio, poolSupply);\r\n  const poolAmountInAfterExitFee = poolSupply.minus(newPoolSupply);\r\n\r\n  const poolAmountIn = bdiv(poolAmountInAfterExitFee, BONE.minus(EXIT_FEE));\r\n  return poolAmountIn;\r\n}\r\n\r\nexport function calcAllOutGivenPoolIn(\r\n  tokenBalances ,\r\n  tokenDenorms,\r\n  poolSupply,\r\n  poolAmountIn\r\n) {\r\n  const exitFee = bmul(bnum(poolAmountIn), EXIT_FEE);\r\n  const pAiAfterExitFee = bnum(poolAmountIn).minus(exitFee);\r\n  const ratio = bdiv(pAiAfterExitFee, bnum(poolSupply));\r\n  const amountsOut = [];\r\n  for (let i = 0; i < tokenDenorms.length; i++) {\r\n    const balance = bnum(tokenBalances[i]);\r\n    const denorm = bnum(tokenDenorms[i]);\r\n    if (denorm.eq(0)) {\r\n      amountsOut.push(bnum(0).toString());\r\n    } else {\r\n      amountsOut.push(bmul(ratio, balance).toFixed());\r\n    }\r\n  }\r\n  return amountsOut;\r\n}\r\n\r\nexport function calcSingleInGivenPoolOut(\r\n  tokenBalanceIn,\r\n  tokenWeightIn,\r\n  poolSupply,\r\n  totalWeight,\r\n  poolAmountOut,\r\n  swapFee\r\n) {\r\n  const normalizedWeight = bdiv(tokenWeightIn, totalWeight);\r\n  const newPoolSupply = poolSupply.plus(poolAmountOut);\r\n  const poolRatio = bdiv(newPoolSupply, poolSupply);\r\n\r\n  const boo = bdiv(BONE, normalizedWeight);\r\n  const tokenInRatio = bpow(poolRatio, boo);\r\n  const newTokenBalanceIn = bmul(tokenInRatio, tokenBalanceIn);\r\n  const tokenAmountInAfterFee = newTokenBalanceIn.minus(tokenBalanceIn);\r\n\r\n  const zar = bmul(BONE.minus(normalizedWeight), swapFee);\r\n  const tokenAmountIn = bdiv(tokenAmountInAfterFee, BONE.minus(zar));\r\n  return tokenAmountIn;\r\n}\r\n\r\nexport function calcSingleOutGivenPoolIn(\r\n  tokenBalanceOut,\r\n  tokenWeightOut,\r\n  poolSupply,\r\n  totalWeight,\r\n  poolAmountIn,\r\n  swapFee\r\n) {\r\n  const normalizedWeight = bdiv(tokenWeightOut, totalWeight);\r\n  const poolAmountInAfterExitFee = bmul(poolAmountIn, BONE.minus(EXIT_FEE));\r\n  const newPoolSupply = poolSupply.minus(poolAmountInAfterExitFee);\r\n  const poolRatio = bdiv(newPoolSupply, poolSupply);\r\n\r\n  const tokenOutRatio = bpow(poolRatio, bdiv(BONE, normalizedWeight));\r\n  const newTokenBalanceOut = bmul(tokenOutRatio, tokenBalanceOut);\r\n\r\n  const tokenAmountOutBeforeSwapFee = tokenBalanceOut.minus(\r\n      newTokenBalanceOut\r\n  );\r\n\r\n  const zaz = bmul(BONE.minus(normalizedWeight), swapFee);\r\n  const tokenAmountOut = bmul(tokenAmountOutBeforeSwapFee, BONE.minus(zaz));\r\n  return tokenAmountOut;\r\n}\r\n\r\nexport function bmul(a, b) {\r\n  let c0 = a.times(b);\r\n  let c1 = c0.plus(BONE.div(new BigNumber(2)));\r\n  let c2 = c1.idiv(BONE);\r\n  return c2;\r\n}\r\n\r\nexport function bdiv(a, b) {\r\n  let c0 = a.times(BONE);\r\n  let c1 = c0.plus(b.div(new BigNumber(2)));\r\n  let c2 = c1.idiv(b);\r\n  return c2;\r\n}\r\n\r\nexport function btoi(a) {\r\n  return a.idiv(BONE);\r\n}\r\n\r\nexport function bfloor(a) {\r\n  return btoi(a).times(BONE);\r\n}\r\n\r\nexport function bsubSign(\r\n  a,\r\n  b\r\n) {\r\n  if (a.gte(b)) {\r\n    let res = a.minus(b);\r\n    let bool = false;\r\n    return { res, bool };\r\n  } else {\r\n    let res = b.minus(a);\r\n    let bool = true;\r\n    return { res, bool };\r\n  }\r\n}\r\n\r\nfunction bpowi(a, n) {\r\n  let z = !n.modulo(new BigNumber(2)).eq(new BigNumber(0)) ? a : BONE;\r\n\r\n  for (\r\n    n = n.idiv(new BigNumber(2));\r\n    !n.eq(new BigNumber(0));\r\n    n = n.idiv(new BigNumber(2))\r\n  ) {\r\n    a = bmul(a, a);\r\n    if (!n.modulo(new BigNumber(2)).eq(new BigNumber(0))) {\r\n      z = bmul(z, a);\r\n    }\r\n  }\r\n  return z;\r\n}\r\n\r\nexport function bpow(base, exp) {\r\n  let whole = bfloor(exp);\r\n  let remain = exp.minus(whole);\r\n  let wholePow = bpowi(base, btoi(whole));\r\n  if (remain.eq(new BigNumber(0))) {\r\n    return wholePow;\r\n  }\r\n\r\n  let partialResult = bpowApprox(base, remain, BPOW_PRECISION);\r\n  return bmul(wholePow, partialResult);\r\n}\r\n\r\nfunction bpowApprox(\r\n  base,\r\n  exp,\r\n  precision\r\n) {\r\n  let a = exp;\r\n  let { res: x, bool: xneg } = bsubSign(base, BONE);\r\n  let term = BONE;\r\n  let sum = term;\r\n  let negative = false;\r\n\r\n  for (let i = 1; term.gte(precision); i++) {\r\n    let bigK = new BigNumber(i).times(BONE);\r\n    let { res: c, bool: cneg } = bsubSign(a, bigK.minus(BONE));\r\n    term = bmul(term, bmul(c, x));\r\n    term = bdiv(term, bigK);\r\n    if (term.eq(new BigNumber(0))) break;\r\n\r\n    if (xneg) negative = !negative;\r\n    if (cneg) negative = !negative;\r\n    if (negative) {\r\n      sum = sum.minus(term);\r\n    } else {\r\n      sum = sum.plus(term);\r\n    }\r\n  }\r\n\r\n  return sum;\r\n}\r\n","import { theme } from '../../../theme'\r\nimport {\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  button: {\r\n    height: '5.2vh',\r\n    marginTop: '3vh'\r\n  },\r\n  buttonBox: {\r\n    textAlign: 'center'\r\n  }\r\n});","import React, { useEffect } from \"react\";\r\nimport { Grid, TextField, Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { formatter } from \"../../utils/utils\";\r\nimport useTokenBalance from \"../../hooks/useTokenBalance\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    maxHeight: 26,\r\n    padding: 0\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: 200\r\n    }\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  textField: {\r\n    width: \"25ch\"\r\n  },\r\n  input: {\r\n    fontSize: theme.typography.subtitle1.fontSize\r\n  },\r\n  helperText: {\r\n    color: theme.palette.text.dark\r\n  },\r\n  error: {\r\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"red\"\r\n    },\r\n    \"& .MuiOutlinedInput-input\": {\r\n      color: \"red\"\r\n    },\r\n    \"&:hover .MuiOutlinedInput-input\": {\r\n      color: \"red\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst InputToken = ({ onDemandGreaterThanBalance, ...props }) => {\r\n  const { account, library } = useWeb3React();\r\n  const [info, setInfo] = React.useState(\"\");\r\n  const balance = useTokenBalance(info ? info.address : \"\");\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    setInfo(props.info);\r\n  }, [props.info, account, balance]);\r\n\r\n  useEffect(() => {\r\n    const bnDemandValue = Number(props.placeholder);\r\n    if (onDemandGreaterThanBalance && bnDemandValue > 0) {\r\n      const newValue = bnDemandValue > Number(balance);\r\n      onDemandGreaterThanBalance(props.info.symbol, newValue);\r\n    }\r\n  }, [balance, onDemandGreaterThanBalance, props.info.symbol, props.placeholder])\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      className={classes.container}\r\n    >\r\n\r\n      <Grid item xs={12} className={classes.margin}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          value={value}\r\n          size={props.size ? props.size : \"small\"}\r\n          onChange={e => {\r\n            e.preventDefault();\r\n            setValue(e.target.value)\r\n            if (props.onChange) props.onChange(e.target.value);\r\n          }}\r\n          placeholder={\r\n            library && props && props.placeholder && !isNaN(props.placeholder)\r\n              ? formatter.format(\r\n                library.utils.fromWei(props.placeholder, \"ether\")\r\n              )\r\n              : \"0\"\r\n          }\r\n          FormHelperTextProps={{\r\n            className: classes.helperText\r\n          }}\r\n          fullWidth={true}\r\n          InputProps={{\r\n            classes: {\r\n              input: classes.input\r\n            },\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {props.maxButton && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={() => {\r\n                      setValue(formatter.format(\r\n                        library.utils.fromWei(balance, \"ether\")\r\n                      ))\r\n                      props.onChange(\r\n                        formatter.format(\r\n                          library.utils.fromWei(balance, \"ether\")\r\n                        )\r\n                      );\r\n                    }}\r\n                  >\r\n                    MAX\r\n                  </Button>\r\n                )}\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Typography variant=\"caption\" color=\"primary\">\r\n                  {info ? info.symbol : \"\"}\r\n                </Typography>\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n          helperText={`Balance: ${balance ? formatter.format(library.utils.fromWei(balance, 'ether')) : '0'}`}\r\n          error={props.error}\r\n          autoComplete='off'\r\n          className={props.toBig === true ? classes.error : ''}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInputToken.defaultProps = {\r\n  onInputGreaterThanBalance: () => { }\r\n}\r\n\r\nexport default React.memo(InputToken, (prevProps, nextProps) => {\r\n  return prevProps.info.address === nextProps.info.address\r\n    && prevProps.placeholder === nextProps.placeholder\r\n    && prevProps.error === nextProps.error\r\n});\r\n","import React from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst useApprove = (spender, amount, contractAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const { addToast } = useToasts()\r\n\r\n    const approve = async (_spender, _amount, _contractAddress) => {\r\n        const contract = makeContract(library, abis.erc20, _contractAddress);   \r\n        await contract.methods.approve(\r\n            _spender, \r\n            _amount\r\n        ).send({from: account}).then(()=> {\r\n            addToast('Transaction Succes!', {\r\n                appearance: 'success',\r\n                autoDismiss: true,\r\n            })\r\n        \r\n        }).catch((err) => {\r\n          if(err.message.includes(\"User denied transaction signature\")) {\r\n            addToast('Denied Transaction', {\r\n                appearance: 'error',\r\n                autoDismiss: true,\r\n            })\r\n          } else {\r\n            addToast('Transaction Failed', {\r\n                appearance: 'error',\r\n                autoDismiss: true,\r\n            })\r\n          }\r\n        })\r\n    }\r\n\r\n    const handleApprove = React.useCallback(\r\n      async () => {\r\n        await approve(\r\n            spender, amount.toString(), contractAddress\r\n        )\r\n      },\r\n      [account, spender, amount, contractAddress],\r\n    )\r\n  \r\n    return { onApprove: handleApprove }\r\n  }\r\n  \r\n  export default useApprove","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\nimport { getPool } from '../utils/contracts';\r\nimport useBlock from './useBlock'\r\n\r\nconst useAllowance = (spender, tokenAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [allowance, setAllowance] = useState('0')\r\n    const block = useBlock()\r\n\r\n    const fetchAllowance = useCallback(async () => {\r\n        const contract = makeContract(library, abis.erc20, tokenAddress);\r\n        const _allowance = await contract.methods.allowance(account, spender).call();\r\n        setAllowance(_allowance);\r\n    }, [account, library, spender, tokenAddress])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && tokenAddress && spender) {\r\n            fetchAllowance()\r\n        }\r\n\r\n    }, [account, library, tokenAddress, block, spender, fetchAllowance])\r\n\r\n    return allowance\r\n}\r\n\r\nexport default useAllowance\r\n","import React, { useMemo } from 'react';\r\nimport { theme } from '../../theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button as MaterialButton } from '@material-ui/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { MAX_UINT, isApproved } from '../../utils/utils'\r\nimport useApprove from '../../hooks/useApprove';\r\nimport useAllowance from '../../hooks/useAllowance';\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        background: theme.palette.gradient.main,\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: theme.palette.text.primary,\r\n        minHeight: 38,\r\n        padding: '0 15px',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(MaterialButton);\r\n\r\nconst ApproveButton = ({ poolAddress, poolTokenAddress, handleApproved }) => {\r\n    const allowance = useAllowance(poolAddress, poolTokenAddress);\r\n    const { onApprove } = useApprove(poolAddress, MAX_UINT, poolTokenAddress);\r\n\r\n    const isTokenApproved = useMemo(() => isApproved(allowance), [allowance]);\r\n\r\n    React.useEffect(() => {\r\n        handleApproved(poolTokenAddress, isTokenApproved)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isTokenApproved, poolTokenAddress])\r\n\r\n    const onApproveHandler = async () => {\r\n        await onApprove();\r\n        handleApproved(poolTokenAddress, true)\r\n    }\r\n    return (\r\n        <>\r\n            {isTokenApproved ?\r\n                <MaterialButton\r\n                    size='small'\r\n                    disabled={true}\r\n                    color='secondary'\r\n                >\r\n                    Approved\r\n                </MaterialButton>\r\n                :\r\n                <StyledButton\r\n                    size='small'\r\n                    onClick={onApproveHandler}\r\n                    disabled={false}\r\n                    color='secondary'\r\n                >\r\n                    Approve\r\n            </StyledButton>\r\n            }\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ApproveButton;","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n\r\nimport ApproveButton from \"../../buttons/ApproveButton.component\";\r\n\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport InputToken from \"../../inputs/InputToken\";\r\nimport { getCoinAvatar } from \"../../../utils/utils\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxHeight: \"45vh\",\r\n        overflowY: \"scroll\"\r\n    }\r\n}));\r\n\r\nconst TokenList = ({\r\n    poolAddress,\r\n    poolTokens,\r\n    poolAmounts,\r\n    withButton,\r\n    handleSelect,\r\n    singleAmount,\r\n    onDemandGreaterThanBalance\r\n}) => {\r\n    const { account, chainId, library } = useWeb3React();\r\n    const classes = useStyles();\r\n    const [single, setSingle] = React.useState();\r\n    const [approvedMap, setApprovedMap] = React.useState({});\r\n\r\n    const [token, setToken] = React.useState();\r\n\r\n    useEffect(() => {\r\n        const isSingle = false\r\n        handleSelect(null);\r\n        setSingle(isSingle)\r\n    }, [handleSelect]);\r\n\r\n    // const handleToggle = (value) => () => {\r\n    //     const isSingle = false\r\n    //     setChecked([value]);\r\n    //     setToken(value);\r\n    //     if (isSingle) {\r\n    //         handleSelect(value);\r\n    //         handleMintDisabling(!approvedMap[value])\r\n    //     } else {\r\n    //         const isAllApproved = !poolTokens.find((token) => !approvedMap[token])\r\n    //         handleSelect(null);\r\n    //         handleMintDisabling(!isAllApproved)\r\n    //     }\r\n    //     setSingle(isSingle)\r\n    // };\r\n\r\n    const handleApproved = React.useCallback(\r\n        (tokenAddress, isApproved) => {\r\n            setApprovedMap(prevApprovedMap => ({\r\n                ...prevApprovedMap,\r\n                [tokenAddress]: isApproved\r\n            }));\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        },\r\n        []\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {poolTokens && poolAmounts && poolAddress ? (\r\n                <Grid container>\r\n                    <List className={classes.root} dense={true}>\r\n                        {poolTokens.map(value => {\r\n                            const address = poolAddress;\r\n                            const id = poolTokens.indexOf(value);\r\n                            return (\r\n                                <ListItem key={value} role={undefined} className={classes.item}>\r\n                                    <Grid\r\n                                        container\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        className={classes.nowrapper}\r\n                                    >\r\n                                        <Grid item>\r\n                                            <ListItemIcon>\r\n                                                {/*<Checkbox*/}\r\n                                                {/*  edge=\"start\"*/}\r\n                                                {/*  checked={*/}\r\n                                                {/*    single === undefined*/}\r\n                                                {/*      ? false*/}\r\n                                                {/*      : single === true*/}\r\n                                                {/*      ? checked.indexOf(value) !== -1*/}\r\n                                                {/*      : true*/}\r\n                                                {/*  }*/}\r\n                                                {/*  tabIndex={-1}*/}\r\n                                                {/*  color=\"primary\"*/}\r\n                                                {/*  onClick={handleToggle(value)}*/}\r\n                                                {/*/>*/}\r\n                                            </ListItemIcon>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar\r\n                                                    alt={`Avatar`}\r\n                                                    src={getCoinAvatar(value, chainId).img}\r\n                                                />\r\n                                            </ListItemAvatar>\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                            <InputToken\r\n                                                info={getCoinAvatar(value, chainId)}\r\n                                                placeholder={\r\n                                                    singleAmount !== undefined && token == value\r\n                                                        ? singleAmount\r\n                                                        : poolAmounts[id]\r\n                                                }\r\n                                                onDemandGreaterThanBalance={onDemandGreaterThanBalance}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                            {withButton == true ? (\r\n                                                <ListItem>\r\n                                                    <ApproveButton\r\n                                                        poolAddress={address}\r\n                                                        poolTokenAddress={value}\r\n                                                        handleApproved={handleApproved}\r\n                                                    />\r\n                                                </ListItem>\r\n                                            ) : (\r\n                                                <></>\r\n                                            )}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </ListItem>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                </Grid>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTokenList.defaultProps = {\r\n    handleMintDisabling: () => { },\r\n    onDemandGreaterThanBalance: () => { }\r\n};\r\n\r\nexport default TokenList;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    underText: {\r\n        color: '#747474',\r\n        margin: 0,\r\n        fontSize: '0.75rem',\r\n        marginTop: '3px',\r\n        textAlign: 'left',\r\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans - serif',\r\n        fontWeight: 400,\r\n        lineHeight: 1.66,\r\n        letterSpacing: '0.03333em',\r\n    },\r\n    button: {\r\n        height: '5.2vh',\r\n        marginTop: '3vh'\r\n    }\r\n\r\n});\r\n\r\nexport const MintWithBnbButton = ({ onClick, disabled, bnbToSendValue }) => {\r\n\r\n    const styles = useStyles()\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant='contained'\r\n                color='primary'\r\n                size='small'\r\n                onClick={onClick}\r\n                className={styles.button}\r\n                disabled={disabled}\r\n            >\r\n                MINT WITH BNB\r\n        </Button>\r\n            <p className={styles.underText}>Send: {bnbToSendValue.div(1e18).toFixed(3)} BNB</p>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const BurnWithBnbButton = ({ onClick, disabled, bnbToSendValue }) => {\r\n\r\n    const styles = useStyles()\r\n    return (\r\n            <div>\r\n                <Button\r\n                        variant='contained'\r\n                        color='primary'\r\n                        size='small'\r\n                        onClick={onClick}\r\n                        className={styles.button}\r\n                        disabled={disabled}\r\n                >\r\n                    BURN TO BNB\r\n                </Button>\r\n                <p className={styles.underText}>Send: {bnbToSendValue.div(1e18).toFixed(3)} BNB</p>\r\n            </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { getPool } from '../utils/contracts'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst useJoinPool = (poolAddress, poolAmountOut, maxAmountsIn) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const { addToast } = useToasts()\r\n\r\n    const join = async (\r\n        _poolAmountOut,\r\n        _maxAmountsIn\r\n    ) => {\r\n      addToast('Waiting for transaction succes...', {\r\n          appearance: 'info',\r\n          autoDismiss: true,\r\n      })\r\n      const contract = makeContract(library, abis.indexpool, poolAddress);\r\n      await contract.methods.joinPool(\r\n        _poolAmountOut.toString(),\r\n        _maxAmountsIn\r\n      ).send({from: account}).then(()=> {\r\n          addToast('Transaction Succes!', {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n          })\r\n\r\n      }).catch((err) => {\r\n        if(err.message.includes(\"User denied transaction signature\")) {\r\n          addToast('Denied Transaction', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n          })\r\n        } else {\r\n          addToast('Transaction Failed', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    const handleJoin = React.useCallback(\r\n      async () => {\r\n        await join(\r\n            poolAmountOut,\r\n            maxAmountsIn\r\n        )\r\n      },\r\n      [account, poolAddress, poolAmountOut, maxAmountsIn],\r\n    )\r\n\r\n    return { onJoinPool: handleJoin }\r\n  }\r\n\r\n  export default useJoinPool\r\n","import React from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { abis } from \"@project/contracts\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst useJoinSwapPool = (poolAddress, tokenIn, tokenAmountIn, minPoolAmountOut) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const { addToast } = useToasts()\r\n\r\n    const joinswap = async (\r\n\r\n    ) => {\r\n      addToast('Waiting for transaction succes...', {\r\n          appearance: 'info',\r\n          autoDismiss: true,\r\n      })\r\n      const contract = makeContract(library, abis.indexpool, poolAddress);\r\n    debugger\r\n      await contract.methods.joinswapExternAmountIn(\r\n        tokenIn,\r\n        tokenAmountIn,\r\n        minPoolAmountOut\r\n      ).send({from: account}).then(()=> {\r\n          addToast('Transaction Succes!', {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n          })\r\n\r\n      }).catch((err) => {\r\n        if(err.message.includes(\"User denied transaction signature\")) {\r\n          addToast('Denied Transaction', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n          })\r\n        } else {\r\n          addToast('Transaction Failed', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    const handleJoinSwap = React.useCallback(\r\n      async () => {\r\n        await joinswap()\r\n      },\r\n      [account, poolAddress, tokenIn, tokenAmountIn, minPoolAmountOut],\r\n    )\r\n\r\n    return { onJoinSwapPool: handleJoinSwap }\r\n  }\r\n\r\n  export default useJoinSwapPool\r\n","import React, { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { abis, addresses } from \"@project/contracts\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst ADDRESS_ZERO = '0x0000000000000000000000000000000000000000'\r\n\r\nconst useSwapBnbForAllTokensMint = (indexPoolAddress, indexPoolTokensCount, poolAmountOut, valueBNBIn) => {\r\n  const { account, library, chainId } = useWeb3React()\r\n  const { addToast } = useToasts()\r\n\r\n  const intermediaries = useMemo(() => Array.from({ length: indexPoolTokensCount }, () => ADDRESS_ZERO), [indexPoolTokensCount])\r\n  const handleSwap = React.useCallback(\r\n    async () => {\r\n      const joinswap = async () => {\r\n        addToast('Waiting for transaction succes...', {\r\n          appearance: 'info',\r\n          autoDismiss: true,\r\n        })\r\n        const contract = makeContract(library, abis.uniswapRouterMinter, addresses[chainId].uniswapRouterMinter);\r\n        await contract.methods.swapETHForAllTokensAndMintExact(\r\n          indexPoolAddress,\r\n          intermediaries,\r\n          poolAmountOut\r\n        ).send({ from: account, value: valueBNBIn.toString() }).then(() => {\r\n          addToast('Transaction Succes!', {\r\n            appearance: 'success',\r\n            autoDismiss: true,\r\n          })\r\n\r\n        }).catch((err) => {\r\n          if (err.message.includes(\"User denied transaction signature\")) {\r\n            addToast('Denied Transaction', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n            })\r\n          } else {\r\n            addToast('Transaction Failed', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n            })\r\n          }\r\n        })\r\n\r\n      }\r\n\r\n      await joinswap()\r\n    },\r\n    [account, addToast, chainId, indexPoolAddress, intermediaries, library, poolAmountOut, valueBNBIn],\r\n  )\r\n\r\n  return { onSwapBnbForTokensAndMint: handleSwap }\r\n}\r\n\r\nexport default useSwapBnbForAllTokensMint\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport {  abis } from \"@project/contracts\";\r\nimport { makeContract, isApproved } from '../utils/utils';\r\n\r\nconst useCheckIfAllApproved = (poolInfo) => {\r\n\r\n    const { account, library } = useWeb3React()\r\n    const [isAllApproved, setIsAllApproved] = useState(true)\r\n    const [checkApproveStatus, setCheckApproveStatus] = useState(false);\r\n\r\n    const fetchAllowance = useCallback(async (spender, tokenAddress) => {\r\n        try {\r\n            const contract = makeContract(library, abis.erc20, tokenAddress);\r\n            return await contract.methods.allowance(account, spender).call();\r\n        } catch(error) {\r\n            return 0;\r\n        }\r\n    }, [account, library])\r\n\r\n    const { tokens, address } = poolInfo;\r\n\r\n    const getApproveStatus = useCallback(async () => {\r\n        tokens.forEach(async (token) => {\r\n            const allowance = await fetchAllowance(address, token);\r\n            const isTokenApproved = isApproved(allowance);\r\n            if(!isTokenApproved) {\r\n                setIsAllApproved(false);\r\n                return isAllApproved;\r\n            }\r\n        });\r\n        setCheckApproveStatus(true);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (account && library) {\r\n            getApproveStatus()\r\n        }\r\n\r\n    }, [account, library, checkApproveStatus, getApproveStatus])\r\n    \r\n    return isAllApproved;\r\n};\r\n\r\nexport default useCheckIfAllApproved\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport {  abis } from \"@project/contracts\";\r\nimport { makeContract, formatter } from '../utils/utils';\r\n\r\nconst useAllBalanceAvailable = (poolInfo, poolAmounts, inputValue) => {\r\n\r\n    const { account, library } = useWeb3React()\r\n    const [hasAllBalance, setHasAllBalance] = useState(true)\r\n    const [checkBalanceStatus, setCheckBalanceStatus] = useState(false);\r\n\r\n    const fetchBalance = useCallback(async (tokenAddress) => {\r\n        const contract = makeContract(library, abis.erc20, tokenAddress);\r\n        const balance = await contract.methods.balanceOf(account).call();\r\n        return balance;\r\n    }, [account, library])\r\n\r\n    const { tokens, address } = poolInfo;\r\n\r\n    const getBalanceStatus = useCallback(async () => {\r\n\r\n        if(inputValue == 0 && checkBalanceStatus == true) {\r\n            setHasAllBalance(true);\r\n        }\r\n        tokens.forEach(async (token, index) => {\r\n            const inputAmount = poolAmounts[index] || \"0\";\r\n            const balance = await fetchBalance(token);\r\n            if(balance == 0 || parseInt(balance) < parseInt(inputAmount)) {\r\n                setHasAllBalance(false);\r\n            }\r\n        });\r\n        \r\n        setCheckBalanceStatus(true);\r\n    }, [poolAmounts, checkBalanceStatus])\r\n\r\n    useEffect(() => {\r\n        if (account && library) {\r\n            getBalanceStatus()\r\n        }\r\n\r\n    }, [account, library, getBalanceStatus, checkBalanceStatus])\r\n    \r\n    return hasAllBalance;\r\n};\r\n\r\nexport default useAllBalanceAvailable\r\n","import React, { useCallback } from \"react\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { formatter, getCoinAvatar } from \"../../../utils/utils\";\r\nimport {\r\n    calcAllInGivenPoolOut,\r\n    calcSingleInGivenPoolOut\r\n} from \"../../../utils/bmath\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useStyles } from \"./MintPanel.styles\";\r\nimport { addresses } from \"@project/contracts\";\r\n\r\nimport InputToken from \"../../inputs/InputToken\";\r\nimport TokenList from \"../../lists/tokenlist/TokenList.component\";\r\nimport { MintWithBnbButton } from \"../../buttons/MintWithBnbButton\";\r\n\r\nimport useJoinPool from \"../../../hooks/useJoinPool\";\r\nimport useJoinSwapPool from \"../../../hooks/useJoinSwapPool\";\r\n\r\nimport usePoolTokenInfo from \"../../../hooks/usePoolTokenInfo\";\r\nimport useSwapBnbForAllTokensMint from \"../../../hooks/useSwapBnbForAllTokensMint\";\r\nimport useCheckIfAllApproved from '../../../hooks/useCheckIfAllApproved';\r\nimport useAllBalanceAvailable from '../../../hooks/useAllBalanceAvailable';\r\nimport useBalance from '../../../hooks/useBalance';\r\n\r\n\r\nconst MintPanel = ({ poolInfo }) => {\r\n    const { account, library, chainId } = useWeb3React();\r\n    const classes = useStyles();\r\n\r\n    const [inputValue, setInputValue] = React.useState(\"0\");\r\n    const [amounts, setAmounts] = React.useState([\"0\"]);\r\n    const [singleAmount, setSingleAmount] = React.useState();\r\n    const [inputError, setInputError] = React.useState();\r\n    const [selected, setSelected] = React.useState();\r\n    const [demandBalanceMap, setDemandBalanceMap] = React.useState({});\r\n    const [isMintDisabled, setIsMintDisabled] = React.useState(true);\r\n    const [isDemandGreaterThanBalance, setIsDemandGreaterThanBalance] = React.useState(true);\r\n\r\n    const checkIfAllApproved = useCheckIfAllApproved(poolInfo);\r\n\r\n    const hasBalanceAvailable = useAllBalanceAvailable(poolInfo, amounts, inputValue);\r\n    const accountBalance = useBalance();\r\n\r\n    // hotfix\r\n    const [\r\n        potentialBnbSwappedAmount,\r\n        setPotentialBnbSwappedAmount\r\n    ] = React.useState(new BigNumber(0));\r\n\r\n    const selectedTokenInfo = usePoolTokenInfo(poolInfo.address, selected);\r\n    const bnbTokenInfo = usePoolTokenInfo(\r\n        poolInfo.address,\r\n        addresses[chainId].WBNB\r\n    );\r\n\r\n    const { onJoinPool } = useJoinPool(poolInfo.address, inputValue, amounts);\r\n    const { onJoinSwapPool } = useJoinSwapPool(\r\n        poolInfo.address,\r\n        selected,\r\n        singleAmount,\r\n        \"1\"\r\n    );\r\n    const { onSwapBnbForTokensAndMint } = useSwapBnbForAllTokensMint(\r\n        poolInfo.address,\r\n        poolInfo.tokens.length,\r\n        inputValue,\r\n        potentialBnbSwappedAmount\r\n    );\r\n\r\n    const handleAmounts = React.useCallback(\r\n        (inputAmount, _poolInfo) => {\r\n            if (selected === null && _poolInfo !== undefined) {\r\n                const _amounts = calcAllInGivenPoolOut(\r\n                    _poolInfo.balances,\r\n                    _poolInfo.totalSupply,\r\n                    inputAmount\r\n                );\r\n                setAmounts(_amounts);\r\n                setSingleAmount(undefined);\r\n            } else if (selected !== null && selectedTokenInfo.balance !== undefined) {\r\n                const _amountSingle = calcSingleInGivenPoolOut(\r\n                    new BigNumber(selectedTokenInfo.balance),\r\n                    new BigNumber(selectedTokenInfo.weight),\r\n                    new BigNumber(_poolInfo.totalSupply),\r\n                    new BigNumber(_poolInfo.totalWeight),\r\n                    new BigNumber(inputAmount),\r\n                    new BigNumber(_poolInfo.swapFee)\r\n                );\r\n                const _amounts = calcAllInGivenPoolOut(\r\n                    _poolInfo.balances,\r\n                    _poolInfo.totalSupply,\r\n                    \"0\"\r\n                );\r\n                setAmounts(_amounts);\r\n                setSingleAmount(_amountSingle.toFixed());\r\n            }\r\n        },\r\n        [selected, selectedTokenInfo.balance, selectedTokenInfo.weight]\r\n    );\r\n\r\n    const demandGreaterThanBalanceHandler = React.useCallback(\r\n        (tokenSymbol, value) => {\r\n            setDemandBalanceMap((prevDemandBalanceMap) => ({ ...prevDemandBalanceMap, [tokenSymbol]: value }))\r\n        }, []\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        const values = Object.values(demandBalanceMap);\r\n        if (values.length === poolInfo.tokens.length) {\r\n            const isAnyDemandGreaterThanBalance = values.find((val) => val)\r\n            if (isAnyDemandGreaterThanBalance) {\r\n                setIsDemandGreaterThanBalance(isAnyDemandGreaterThanBalance);\r\n            }\r\n        }\r\n    }, [demandBalanceMap, poolInfo.tokens.length]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        handleAmounts(inputValue, poolInfo);\r\n        setIsMintDisabled(!checkIfAllApproved || !hasBalanceAvailable);\r\n    }, [handleAmounts, inputValue, poolInfo, checkIfAllApproved, hasBalanceAvailable]);\r\n\r\n    React.useEffect(() => {\r\n        if (bnbTokenInfo.balance !== undefined) {\r\n            const _amountSingle = calcSingleInGivenPoolOut(\r\n                new BigNumber(bnbTokenInfo.balance),\r\n                new BigNumber(bnbTokenInfo.weight),\r\n                new BigNumber(poolInfo.totalSupply),\r\n                new BigNumber(poolInfo.totalWeight),\r\n                new BigNumber(inputValue),\r\n                new BigNumber(poolInfo.swapFee)\r\n            );\r\n            setPotentialBnbSwappedAmount(_amountSingle);\r\n        }\r\n    }, [\r\n        bnbTokenInfo.balance,\r\n        bnbTokenInfo.weight,\r\n        inputValue,\r\n        poolInfo.swapFee,\r\n        poolInfo.totalSupply,\r\n        poolInfo.totalWeight\r\n    ]);\r\n\r\n    const handleChange = useCallback(\r\n        value => {\r\n            setInputError();\r\n            if (value !== undefined && Number(value) > 0) {\r\n                var inputValue = library.utils.toWei(value, \"ether\");\r\n                if (new BigNumber(inputValue).gt(poolInfo.totalSupply)) {\r\n                    setInputError(\r\n                        `Max value is ${new BigNumber(poolInfo.totalSupply)\r\n                            .div(1e18)\r\n                            .toFixed(4)} ${poolInfo.symbol}`\r\n                    );\r\n                    return;\r\n                }\r\n                setInputValue(inputValue);\r\n                handleAmounts(inputValue, poolInfo);\r\n                setIsDemandGreaterThanBalance(false)\r\n            } else {\r\n                setInputValue(\"0\");\r\n                setAmounts([]);\r\n                setPotentialBnbSwappedAmount(new BigNumber(0));\r\n            }\r\n        },\r\n        [handleAmounts, library.utils, poolInfo]\r\n    );\r\n\r\n    const handleSelect = useCallback(single => {\r\n        setSelected(single);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            alignItems=\"baseline\"\r\n            justify=\"center\"\r\n            className={classes.root}\r\n        >\r\n            <Grid item xs={6}>\r\n                <InputToken\r\n                    onChange={handleChange}\r\n                    info={getCoinAvatar(poolInfo.address, chainId)}\r\n                    size=\"medium\"\r\n                    error={inputError}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={3} textAlign=\"center\">\r\n                <div className={classes.buttonBox}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={selected === null ? onJoinPool : onJoinSwapPool}\r\n                        className={classes.button}\r\n                        disabled={isMintDisabled || selected !== null || inputError || inputValue <= 0 || isDemandGreaterThanBalance}\r\n                    >\r\n                        MINT\r\n          </Button>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <MintWithBnbButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={!selected ? onSwapBnbForTokensAndMint : () => { }}\r\n                    disabled={selected || inputError || inputValue <= 0 || parseFloat(potentialBnbSwappedAmount.div(1e18).toFixed(3)) >= parseFloat(accountBalance)}\r\n                    bnbToSendValue={potentialBnbSwappedAmount}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TokenList\r\n                    poolAddress={poolInfo.address}\r\n                    poolAmounts={amounts}\r\n                    poolTokens={poolInfo.tokens}\r\n                    withButton={true}\r\n                    handleSelect={handleSelect}\r\n                    singleAmount={singleAmount}\r\n                    onDemandGreaterThanBalance={demandGreaterThanBalanceHandler}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default MintPanel;\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\nimport { getPool } from '../utils/contracts';\r\nimport useBlock from './useBlock'\r\n\r\nconst useGetSwapFee = (poolAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [swapFee, setSwapFee] = useState('0')\r\n    const block = useBlock()\r\n\r\n    const getSwapFee = useCallback(async (_poolAddress) => {\r\n        const contract = makeContract(library, abis.indexpool, _poolAddress);\r\n        const fee = await contract.methods.getSwapFee().call();\r\n        setSwapFee(fee);\r\n    }, [library])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && chainId) {\r\n            getSwapFee(poolAddress)\r\n        }\r\n\r\n    }, [account, library, block, chainId, getSwapFee, poolAddress])\r\n\r\n    return swapFee\r\n}\r\n\r\nexport default useGetSwapFee\r\n","import { theme } from '../../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n      width: '100%',\r\n\r\n  },\r\n  button: {\r\n    height: '5.2vh',\r\n    marginTop:'3vh'\r\n  }\r\n});","import React from 'react';\r\nimport { \r\n    Grid,\r\n    Button,\r\n    TextField,\r\n    Menu,\r\n    MenuItem,\r\n    Avatar,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n    withStyles,\r\n    makeStyles,\r\n  } from '@material-ui/core/styles';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport InputToken from './InputToken';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { formatter, getCoinAvatar } from '../../utils/utils'\r\nimport { theme } from '../../theme';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiInputBase-root': {\r\n            color: 'inherit',\r\n            fontSize: theme.typography.body1.fontSize\r\n          },\r\n        \r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n            border: 'none'\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles({\r\n    textfield: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    errorfield: {\r\n        color: 'red',\r\n        \r\n    },\r\n    container: {\r\n        flexWrap: 'nowrap',\r\n        minWidth:'420px'\r\n    },\r\n    label: {\r\n        display: 'flex',\r\n        direction: 'row',\r\n       \r\n    },\r\n    menu:{\r\n        '& .MuiPaper-root': {\r\n            backgroundColor: theme.palette.paper.main\r\n        },\r\n    }\r\n});\r\n\r\n\r\nconst InputPicker = (props) => {\r\n    const {account, chainId, library } = useWeb3React();\r\n    const [ anchorEl, setAnchorEl ] = React.useState(null);\r\n    const [ content, setContent] = React.useState([]);\r\n\r\n    const balance = useTokenBalance(props.selected ? props.selected.address : '')\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSelect = (item) => {\r\n        setAnchorEl(null);\r\n        props.handleSelected(getCoinAvatar(item, chainId));\r\n    }\r\n\r\n    const renderContent = (items) => {\r\n        const _content = [];\r\n        \r\n        for(let i = 0; i < items.length; i++){\r\n            const tokenAvatar = getCoinAvatar(items[i], chainId);\r\n            _content.push(\r\n                <MenuItem key={i} onClick={(e)=>{handleSelect(items[i])}} >\r\n                    <Avatar  alt=\"payment\" src={tokenAvatar.img}/>\r\n                </MenuItem>\r\n        );\r\n        setContent(_content);\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n       renderContent(props.tokens);\r\n    \r\n    }, [props, balance]);\r\n\r\n    return (\r\n        <>\r\n            <Grid \r\n                container \r\n                alignItems='center'\r\n                justify='center'\r\n                className={classes.container}\r\n            >\r\n                <Grid container direction='row' item xs={10} alignItems=\"center\" justify=\"center\" className={props.toBig ? classes.errorfield : classes.textfield}>\r\n                    <InputToken \r\n                        onChange={props.onChange}\r\n                        info={getCoinAvatar(props.poolAddress, chainId)} \r\n                        size='medium'\r\n                        toBig={props.toBig}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Button onClick={(e)=>{setAnchorEl(e.currentTarget);}} size='medium' style={{minHeight:'80px', alignItems:'flex-start'}}>\r\n                        <Avatar src={props.selected ? props.selected.img : ''} alt=\"payment\" />\r\n                        <ArrowDropDownIcon size='small'/>\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={(e)=>{setAnchorEl(null)}}\r\n                        className={classes.menu}\r\n                    >\r\n                        {content}\r\n                    </Menu>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} alignItems='center' justify='flex-end' >\r\n                <Grid item xs={6}>\r\n                    <Typography variant='caption' color='textPrimary'>\r\n                        {props.toBig ? 'Not enough tokens in pool to swap' : ''}\r\n                    </Typography>\r\n                </Grid>            \r\n            </Grid>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default InputPicker; ","import { theme } from '../../../theme'\r\nimport {\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n      width: '100%',\r\n\r\n  },\r\n  button: {\r\n    height: '5.2vh',\r\n    marginTop:'3vh'\r\n  },\r\n  buttonBox: {\r\n    textAlign: 'center'\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { getPool } from '../utils/contracts'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { makeContract } from '../utils/utils';\r\nimport { abis } from '@project/contracts';\r\n\r\nconst useExitPool = (poolAddress, poolAmountIn, minAmountsOut) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const { addToast } = useToasts()\r\n\r\n    const exitPool = async (\r\n        _poolAmountIn, \r\n        _minAmountsOut\r\n    ) => {\r\n      addToast('Waiting for transaction succes...', {\r\n          appearance: 'info',\r\n          autoDismiss: true,\r\n      })\r\n      const contract = makeContract(library, abis.indexpool, poolAddress);\r\n      await contract.methods.exitPool(\r\n        _poolAmountIn.toString(), \r\n        _minAmountsOut\r\n      ).send({from: account}).then(()=> {\r\n          addToast('Transaction Succes!', {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n          })\r\n      \r\n      }).catch((err) => {\r\n        if(err.message.includes(\"User denied transaction signature\")) {\r\n          addToast('Denied Transaction', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n          })\r\n        } else {\r\n          addToast('Transaction Failed', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n          })\r\n        }\r\n      })\r\n        \r\n    }\r\n\r\n    const handleExit = React.useCallback(\r\n      async () => {\r\n        await exitPool(\r\n            poolAmountIn, \r\n            minAmountsOut\r\n        )\r\n      },\r\n      [account, poolAmountIn, minAmountsOut],\r\n    )\r\n  \r\n    return { onExitPool: handleExit }\r\n  }\r\n  \r\n  export default useExitPool","import React from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { getPool } from '../utils/contracts'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst useExitSwapPool = (poolAddress, tokenOut, tokenAmountIn, minAmountOut) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const { addToast } = useToasts()\r\n\r\n    const exitswap = async (\r\n\r\n    ) => {\r\n      addToast('Waiting for transaction succes...', {\r\n          appearance: 'info',\r\n          autoDismiss: true,\r\n      })\r\n      const contract = makeContract(library, abis.indexpool, poolAddress);\r\n      await contract.methods.exitswapPoolAmountIn(\r\n        tokenOut,\r\n        tokenAmountIn,\r\n        minAmountOut\r\n      ).send({from: account}).then(()=> {\r\n          addToast('Transaction Success!', {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n          })\r\n\r\n      }).catch((err) => {\r\n        if(err.message.includes(\"User denied transaction signature\")) {\r\n          addToast('Denied Transaction', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n          })\r\n        } else {\r\n          addToast('Transaction Failed', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n    const handleExitSwap = React.useCallback(\r\n      async () => {\r\n        await exitswap()\r\n      },\r\n      [account, poolAddress, tokenOut, tokenAmountIn, minAmountOut],\r\n    )\r\n\r\n    return { onExitSwapPool: handleExitSwap }\r\n  }\r\n\r\n  export default useExitSwapPool\r\n","import React, { useMemo } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { abis, addresses } from \"@project/contracts\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { makeContract } from \"../utils/utils\";\r\n\r\nconst ADDRESS_ZERO = \"0x0000000000000000000000000000000000000000\";\r\n\r\nconst useSwapBnbForAllTokensBurn = (\r\n  indexPoolAddress,\r\n  minAmountsOut,\r\n  indexPoolTokensCount,\r\n  poolAmountIn,\r\n  valueBNBIn\r\n) => {\r\n  const { account, library, chainId } = useWeb3React();\r\n  const { addToast } = useToasts();\r\n  const intermediaries = useMemo(\r\n    () => Array.from({ length: indexPoolTokensCount }, () => ADDRESS_ZERO),\r\n    [indexPoolTokensCount]\r\n  );\r\n  const handleSwap = React.useCallback(async () => {\r\n    const joinswap = async () => {\r\n      addToast(\"Waiting for transaction success...\", {\r\n        appearance: \"info\",\r\n        autoDismiss: true\r\n      });\r\n      const contract = makeContract(\r\n        library,\r\n        abis.uniswapRouterBurner,\r\n        addresses[chainId].uniswapRouterBurner\r\n      );\r\n\r\n      await contract.methods\r\n        .burnForAllTokensAndSwapForETH(\r\n          indexPoolAddress,\r\n          minAmountsOut,\r\n          intermediaries,\r\n          poolAmountIn,\r\n          valueBNBIn.toString()\r\n        )\r\n        .send({ from: account, value: valueBNBIn.toString() })\r\n        .then(() => {\r\n          addToast(\"Transaction Success!\", {\r\n            appearance: \"success\",\r\n            autoDismiss: true\r\n          });\r\n        })\r\n        .catch(err => {\r\n          if (err.message.includes(\"User denied transaction signature\")) {\r\n            addToast(\"Denied Transaction\", {\r\n              appearance: \"error\",\r\n              autoDismiss: true\r\n            });\r\n          } else {\r\n            addToast(\"Transaction Failed\", {\r\n              appearance: \"error\",\r\n              autoDismiss: true\r\n            });\r\n          }\r\n        });\r\n    };\r\n\r\n    await joinswap();\r\n  }, [\r\n    account,\r\n    addToast,\r\n    chainId,\r\n    indexPoolAddress,\r\n    intermediaries,\r\n    library,\r\n    indexPoolAddress,\r\n    minAmountsOut,\r\n    indexPoolTokensCount,\r\n    poolAmountIn,\r\n    valueBNBIn\r\n  ]);\r\n\r\n  return { onSwapBnbForTokensAndBurn: handleSwap };\r\n};\r\n\r\nexport default useSwapBnbForAllTokensBurn;\r\n","import React from \"react\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { formatter, getCoinAvatar } from \"../../../utils/utils\";\r\nimport {\r\n  calcAllOutGivenPoolIn,\r\n  calcSingleOutGivenPoolIn,\r\n  calcSingleInGivenPoolOut\r\n} from \"../../../utils/bmath\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useStyles } from \"./BurnPanel.styles\";\r\n\r\nimport InputToken from \"../../inputs/InputToken\";\r\nimport TokenList from \"../../lists/tokenlist/TokenList.component\";\r\n\r\nimport useApprove from \"../../../hooks/useApprove\";\r\nimport useExitPool from \"../../../hooks/useExitPool\";\r\nimport useExitSwapPool from \"../../../hooks/useExitSwapPool\";\r\nimport useAllowance from \"../../../hooks/useAllowance\";\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\n\r\nimport usePoolTokenInfo from \"../../../hooks/usePoolTokenInfo\";\r\nimport { BurnWithBnbButton } from \"../../buttons/MintWithBnbButton\";\r\nimport useSwapBnbForAllTokensBurn from \"../../../hooks/useSwapBnbForAllTokensBurn\";\r\nimport { addresses } from \"@project/contracts\";\r\n\r\nconst BurnPanel = ({ poolInfo }) => {\r\n  const { account, library, chainId } = useWeb3React();\r\n  const [\r\n    potentialBnbSwappedAmount,\r\n    setPotentialBnbSwappedAmount\r\n  ] = React.useState(new BigNumber(0));\r\n  const [inputValue, setInputValue] = React.useState(\"0\");\r\n  const [amounts, setAmounts] = React.useState([\"0\"]);\r\n  const poolAllowance = useAllowance(poolInfo.address, poolInfo.address);\r\n  const [inputError, setInputError] = React.useState();\r\n  const [selected, setSelected] = React.useState();\r\n\r\n  const selectedTokenInfo = usePoolTokenInfo(poolInfo.address, selected);\r\n  const tokenBalance = useTokenBalance(poolInfo.address)\r\n\r\n  const [singleAmount, setSingleAmount] = React.useState();\r\n  const bnbTokenInfo = usePoolTokenInfo(\r\n    poolInfo.address,\r\n    addresses[chainId].WBNB\r\n  );\r\n  const { onExitPool } = useExitPool(poolInfo.address, inputValue, amounts);\r\n  const { onExitSwapPool } = useExitSwapPool(\r\n    poolInfo.address,\r\n    selected,\r\n    inputValue,\r\n    singleAmount\r\n  );\r\n\r\n  const { onSwapBnbForTokensAndBurn } = useSwapBnbForAllTokensBurn(\r\n    poolInfo.address,\r\n    amounts,\r\n    poolInfo.tokens.length,\r\n    inputValue,\r\n    potentialBnbSwappedAmount\r\n  );\r\n\r\n  const { onApprove } = useApprove(\r\n    poolInfo.address,\r\n    inputValue,\r\n    poolInfo.address\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    if (bnbTokenInfo.balance !== undefined) {\r\n      const _amountSingle = calcSingleInGivenPoolOut(\r\n        new BigNumber(bnbTokenInfo.balance),\r\n        new BigNumber(bnbTokenInfo.weight),\r\n        new BigNumber(poolInfo.totalSupply),\r\n        new BigNumber(poolInfo.totalWeight),\r\n        new BigNumber(inputValue),\r\n        new BigNumber(poolInfo.swapFee)\r\n      );\r\n      setPotentialBnbSwappedAmount(_amountSingle);\r\n    }\r\n  }, [\r\n    bnbTokenInfo.balance,\r\n    bnbTokenInfo.weight,\r\n    inputValue,\r\n    poolInfo.swapFee,\r\n    poolInfo.totalSupply,\r\n    poolInfo.totalWeight\r\n  ]);\r\n\r\n  const handleAmounts = React.useCallback(\r\n    (inputAmount, _poolInfo) => {\r\n      if (selected == null && _poolInfo !== undefined) {\r\n        const _amounts = calcAllOutGivenPoolIn(\r\n          poolInfo.balances,\r\n          poolInfo.weights,\r\n          poolInfo.totalSupply,\r\n          inputAmount\r\n        );\r\n        setAmounts(_amounts);\r\n        setSingleAmount(undefined);\r\n      } else if (selected !== null && selectedTokenInfo.balance !== undefined) {\r\n        const _amountSingle = calcSingleOutGivenPoolIn(\r\n          new BigNumber(selectedTokenInfo.balance),\r\n          new BigNumber(selectedTokenInfo.weight),\r\n          new BigNumber(_poolInfo.totalSupply),\r\n          new BigNumber(_poolInfo.totalWeight),\r\n          new BigNumber(inputAmount),\r\n          new BigNumber(_poolInfo.swapFee)\r\n        );\r\n\r\n        const _amounts = calcAllOutGivenPoolIn(\r\n          _poolInfo.balances,\r\n          poolInfo.weights,\r\n          poolInfo.totalSupply,\r\n          \"0\"\r\n        );\r\n        setAmounts(_amounts);\r\n        setSingleAmount(_amountSingle.toFixed());\r\n      }\r\n    },\r\n    [\r\n      poolInfo.balances,\r\n      poolInfo.totalSupply,\r\n      poolInfo.weights,\r\n      selected,\r\n      selectedTokenInfo.balance,\r\n      selectedTokenInfo.weight\r\n    ]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    handleAmounts(inputValue, poolInfo);\r\n  }, [handleAmounts, inputValue, poolInfo]);\r\n\r\n  const handleChange = value => {\r\n    setInputError();\r\n    if (Number(value) > 0 && poolInfo) {\r\n      const inputValue = library.utils.toWei(value, \"ether\");\r\n      if (new BigNumber(inputValue).gt(poolInfo.totalSupply)) {\r\n        setInputError(\r\n          `Max value is ${new BigNumber(poolInfo.totalSupply)\r\n            .div(1e18)\r\n            .toFixed(4)} ${poolInfo.symbol}`\r\n        );\r\n        return;\r\n      }\r\n      setInputValue(inputValue);\r\n      const _amounts = calcAllOutGivenPoolIn(\r\n        poolInfo.balances,\r\n        poolInfo.weights,\r\n        poolInfo.totalSupply,\r\n        inputValue\r\n      );\r\n      // console.log(_amounts);\r\n      setAmounts(_amounts);\r\n    } else {\r\n      const inputValue = \"0\";\r\n      setInputValue(inputValue);\r\n      const _amounts = calcAllOutGivenPoolIn(\r\n        poolInfo.balances,\r\n        poolInfo.weights,\r\n        poolInfo.totalSupply,\r\n        inputValue\r\n      );\r\n      setAmounts(_amounts);\r\n      setPotentialBnbSwappedAmount(new BigNumber(0));\r\n    }\r\n    handleAmounts(inputValue, poolInfo);\r\n  };\r\n\r\n  const handleSelect = single => {\r\n    setSelected(single);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      alignItems=\"baseline\"\r\n      justify=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <Grid item xs={6}>\r\n        <InputToken\r\n          onChange={handleChange}\r\n          info={getCoinAvatar(poolInfo.address, chainId)}\r\n          size=\"medium\"\r\n          error={inputError}\r\n          placeholder='0'\r\n          maxButton\r\n        />\r\n      </Grid>\r\n      <Grid item xs={3} textAlign=\"center\">\r\n        <div className={classes.buttonBox}>\r\n          {poolAllowance >= inputValue ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={selected == null ? onExitPool : onExitSwapPool}\r\n              disabled={selected || inputError || inputValue <= 0 || inputValue > tokenBalance}\r\n              className={classes.button}\r\n            >\r\n              BURN\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={onApprove}\r\n              className={classes.button}\r\n            >\r\n              APPROVE\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Grid>\r\n      {/* <Grid item xs={3}>\r\n        <BurnWithBnbButton\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={onSwapBnbForTokensAndBurn}\r\n          disabled\r\n          // disabled={selected || inputError || inputValue <= 0}\r\n          bnbToSendValue={potentialBnbSwappedAmount}\r\n        />\r\n      </Grid> */}\r\n      <Grid item xs={12}>\r\n        <TokenList\r\n          poolAddress={poolInfo.address}\r\n          poolAmounts={amounts}\r\n          poolTokens={poolInfo.tokens}\r\n          withButton={false}\r\n          handleSelect={handleSelect}\r\n          singleAmount={singleAmount}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BurnPanel;\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\n\r\nconst useTotalWeight = (poolAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [totalWeight, setTotalWeight] = useState('0')\r\n\r\n    const fetchTotalWeight = useCallback(async (_poolAddress) => {\r\n        const contract = makeContract(library, abis.indexpool, _poolAddress);\r\n        const totWeight = await contract.methods.getTotalDenormalizedWeight().call();\r\n        //console.log('totWeight',totWeight)\r\n        setTotalWeight(totWeight);\r\n    }, [library])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && chainId && poolAddress) {\r\n            fetchTotalWeight(poolAddress)\r\n        }\r\n\r\n    }, [account, chainId, fetchTotalWeight, library, poolAddress])\r\n\r\n    return totalWeight\r\n}\r\n\r\nexport default useTotalWeight\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { makeContract } from '../utils/utils';\r\nimport useBlock from './useBlock'\r\n\r\nconst useTotalSupply = (tokenAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [supply, setTotalSupply] = useState(0)\r\n\r\n    const block = useBlock()\r\n\r\n    const fetchSupply = useCallback(async () => {\r\n        const contract = makeContract(library, abis.erc20, tokenAddress);\r\n        const totSupply = await contract.methods.totalSupply().call();\r\n\r\n        setTotalSupply(totSupply)\r\n\r\n    }, [library, tokenAddress])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && tokenAddress) {\r\n            fetchSupply()\r\n        }\r\n    }, [account, library, block, tokenAddress, fetchSupply])\r\n\r\n    return supply\r\n}\r\n\r\nexport default useTotalSupply\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { getPool } from '../utils/contracts';\r\nimport { makeContract } from '../utils/utils';\r\nimport { abis } from '@project/contracts';\r\n\r\nconst usePoolTokenBalances = (poolAddress, poolTokens) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [balance, setBalance] = useState(['0'])\r\n    const [updateBalance, setUpdateBalance] = useState(false);\r\n\r\n    const fetchBalances = useCallback(async (tokenArr) => {\r\n        const contract = makeContract(library, abis.indexpool, poolAddress);\r\n        const bals = [];\r\n        for (let i = 0; i < tokenArr.length; i++) {\r\n            const _balance = await contract.methods.getBalance(tokenArr[i]).call();\r\n            bals.push(_balance);\r\n\r\n        }\r\n        setBalance(bals);\r\n        setUpdateBalance(true);\r\n    }, [library, poolAddress])\r\n\r\n    useEffect(() => {\r\n        if (account && library) {\r\n            fetchBalances(poolTokens)\r\n\r\n        }\r\n\r\n    }, [account, library, poolTokens, chainId, updateBalance, fetchBalances])\r\n\r\n    return balance\r\n}\r\n\r\nexport default usePoolTokenBalances\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { getPool } from '../utils/contracts';\r\nimport { makeContract } from '../utils/utils';\r\nimport { abis } from '@project/contracts';\r\n\r\nconst usePoolTokenWeights = (poolAddress, poolTokens) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [weights, setTokenWeights] = useState(['0'])\r\n\r\n    const fetchWeights = useCallback(async (tokenArr) => {\r\n        const contract = makeContract(library, abis.indexpool, poolAddress);\r\n        const weights = [];\r\n        for (let i = 0; i < tokenArr.length; i++) {\r\n            const tokenWeight = await contract.methods.getDenormalizedWeight(tokenArr[i]).call();\r\n            weights.push(tokenWeight);\r\n\r\n        }\r\n        setTokenWeights(weights);\r\n    }, [library, poolAddress])\r\n\r\n    useEffect(() => {\r\n\r\n        if (account && library && poolTokens && poolAddress) {\r\n            fetchWeights(poolTokens)\r\n        }\r\n\r\n    }, [account, library, poolTokens, chainId, poolAddress, fetchWeights])\r\n\r\n    return weights\r\n}\r\n\r\nexport default usePoolTokenWeights\r\n","import React from 'react';\r\nimport { \r\n    Grid,\r\n    Typography,\r\n    Button, \r\n    ButtonGroup\r\n} from '@material-ui/core'\r\nimport MaterialCard from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport { formatter } from '../../../utils/utils'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useStyles } from './ActionCard.styles';\r\n\r\nimport useCurrentTokens from '../../../hooks/useCurrentTokens';\r\n\r\nimport MintPanel from '../../../components/panels/mintpanel/MintPanel.component';\r\nimport SwapPanel from '../../../components/panels/swappanel/SwapPanel.component';\r\nimport BurnPanel from '../../../components/panels/burnpanel/BurnPanel.component';\r\n\r\n\r\nimport useTotalWeight from '../../../hooks/useTotalWeight';\r\nimport useTotalSupply from '../../../hooks/useTotalSupply';\r\nimport usePoolTokenBalances from '../../../hooks/usePoolTokenBalances';\r\nimport usePoolTokenWeights from '../../../hooks/usePoolTokenWeights';\r\nimport useAllowance from '../../../hooks/useAllowance';\r\nimport useGetSwapFee from '../../../hooks/useGetSwapFee';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst ActionCard = ({ poolInfo }) => {\r\n    const { account } = useWeb3React();\r\n    const classes = useStyles();\r\n    const poolSupply = useTotalSupply(poolInfo.address);\r\n    const poolTokenWeights = usePoolTokenWeights(poolInfo.address, poolInfo.tokens);\r\n    const poolTokenBalances = usePoolTokenBalances(poolInfo.address, poolInfo.tokens);\r\n    const poolAllowance = useAllowance(poolInfo.address, poolInfo.address);\r\n    const [ currentActionTab, setCurrentActionTab ] = React.useState('MINT'); \r\n    \r\n    const [ component, setComponent ] = React.useState(poolInfo ? <MintPanel poolInfo={poolInfo}></MintPanel> : <CircularProgress color='primary'/>)\r\n\r\n    React.useEffect(() => {\r\n        if(currentActionTab === 'MINT') {\r\n            setComponent(<MintPanel poolInfo={poolInfo}/>)\r\n        } else {\r\n            setComponent(<BurnPanel poolInfo={poolInfo}/>)\r\n        }\r\n        \r\n    }, [account, poolInfo, poolSupply, poolTokenWeights, poolTokenBalances])\r\n\r\n    const handleClick = (e, tab='MINT') => {\r\n        if(tab === 'MINT') {\r\n            setComponent(\r\n                <MintPanel poolInfo={poolInfo}/>\r\n            )\r\n            setCurrentActionTab(tab)\r\n        } else {\r\n            setComponent(\r\n            <BurnPanel \r\n                poolInfo={poolInfo}\r\n            />)\r\n            setCurrentActionTab(tab)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MaterialCard className={classes.card}>\r\n            <Grid \r\n                container\r\n                alignItems='flex-start'\r\n            >\r\n                <Grid container item xs={12}>\r\n                    <ButtonGroup className={classes.header}  >\r\n                        <Grid item xs>\r\n                            <Button\r\n                                size=\"medium\"\r\n                                color=\"primary\"\r\n                                variant='outlined'\r\n                                className={classes.button}\r\n                                onClick={(e)=>{handleClick(e, 'MINT')}}\r\n                            >\r\n                                Mint\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <Button\r\n                                size=\"medium\"\r\n                                color=\"primary\"\r\n                                variant='outlined'\r\n                                className={classes.button}\r\n                                onClick={(e)=>{handleClick(e, 'BURN')}}\r\n                            >\r\n                                Burn\r\n                            </Button>\r\n                        </Grid>\r\n                        \r\n\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                \r\n                <Grid item  xs={12} className={classes.content} >\r\n                    {component}\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </MaterialCard>\r\n    )\r\n}\r\n\r\nexport default ActionCard;\r\n\r\n/*\r\n\r\n    <Grid item xs>\r\n        <Button\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            variant='outlined'\r\n            className={classes.button}\r\n            onClick={(e)=>{setComponent(\r\n                <BurnPanel \r\n                    poolAddress={poolAddress} \r\n                    poolTokens={poolTokens} \r\n                    poolSupply={poolSupply} \r\n                    poolTokenWeights={poolTokenWeights}\r\n                    poolTokenBalances={poolTokenBalances}\r\n                    poolAllowance={poolAllowance}\r\n                />\r\n            )}}\r\n        >\r\n            Burn\r\n        </Button>\r\n    </Grid>\r\n\r\n\r\n                        <Grid item xs>\r\n                            <Button\r\n                                size=\"medium\"\r\n                                color=\"primary\"\r\n                                variant='outlined'\r\n                                className={classes.button}\r\n                                onClick={(e)=>{setComponent(<SwapPanel poolAddress={poolAddress} tokens={poolTokens}/>)}}\r\n                            >\r\n                                Swap\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <Button\r\n                                size=\"medium\"\r\n                                color=\"primary\"\r\n                                variant='outlined'\r\n                                className={classes.button}\r\n                            \r\n                            >\r\n                                Details\r\n                            </Button>\r\n                        </Grid>\r\n\r\n*/","import { useCallback, useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useBlock from './useBlock'\r\n\r\nimport useName from './useName';\r\nimport useSymbol from './useSymbol';\r\nimport usePoolTokenBalances from './usePoolTokenBalances';\r\nimport usePoolTokenUsedBalance from './usePoolTokenUsedBalance';\r\nimport usePoolTokenWeights from './usePoolTokenWeights';\r\nimport useCurrentTokens from './useCurrentTokens';\r\nimport useTotalWeight from './useTotalWeight';\r\nimport useTotalSupply from './useTotalSupply';\r\nimport useAveragePrice from './useAveragePrice';\r\nimport useGetSwapFee from './useGetSwapFee';\r\nimport { getTokenAvatar } from '../utils/utils';\r\n\r\nconst usePoolInfo = (poolAddress) => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [info, setInfo] = useState();\r\n    const block = useBlock();\r\n    const name = useName(poolAddress);\r\n    const symbol = useSymbol(poolAddress);\r\n    const poolTokens = useCurrentTokens(poolAddress);\r\n    const totalWeight = useTotalWeight(poolAddress);\r\n    const totalSupply = useTotalSupply(poolAddress);\r\n    const swapFee = useGetSwapFee(poolAddress);\r\n    const poolTokenBalances = usePoolTokenBalances(poolAddress, poolTokens);\r\n    const poolTokenWeights = usePoolTokenWeights(poolAddress, poolTokens);\r\n\r\n    const fetchInfo = useCallback(async (_name, _symbol, _poolTokens, _poolTokenBalances, _poolTokenWeights, _totalWeight, _totalSupply, _swapFee) => {\r\n        const avatar = getTokenAvatar(poolAddress, chainId);\r\n        const _info = {\r\n            address: poolAddress,\r\n            name: _name,\r\n            img: avatar.img,\r\n            symbol: _symbol,\r\n            tokens: _poolTokens,\r\n            balances: _poolTokenBalances,\r\n            weights: _poolTokenWeights,\r\n            totalSupply: _totalSupply,\r\n            totalWeight: _totalWeight,\r\n            swapFee: _swapFee,\r\n\r\n        }\r\n        setInfo(_info);\r\n    }, [poolAddress, chainId])\r\n\r\n    useEffect(() => {\r\n        if (account && library && name && symbol && poolTokens && totalWeight && totalSupply && poolTokenBalances && poolTokenWeights) {\r\n            fetchInfo(name, symbol, poolTokens, poolTokenBalances, poolTokenWeights, totalWeight, totalSupply, swapFee)\r\n        }\r\n\r\n    }, [poolAddress, account, name, symbol, poolTokens, totalWeight, totalSupply, block, poolTokenBalances, poolTokenWeights, library, fetchInfo, swapFee]);\r\n\r\n    return info\r\n}\r\n\r\nexport default usePoolInfo;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useStyles } from './Funds.styles'\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport InfoCard from '../../components/cards/infocard/InfoCard.component'\r\nimport ActionCard from '../../components/cards/actioncard/ActionCard.component'\r\nimport useCurrentTokens from '../../hooks/useCurrentTokens';\r\n\r\nimport usePoolInfo from \"../../hooks/usePoolInfo\";\r\n\r\nfunction Funds({ poolAddress }) {\r\n  const { account, chainId } = useWeb3React();\r\n  const classes = useStyles();\r\n  const poolInfo = usePoolInfo(poolAddress);\r\n\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (!poolInfo && chainId != 56) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n    if (poolInfo) {\r\n\r\n    }\r\n\r\n    return () => {\r\n\r\n    }\r\n  }, [account, chainId, poolInfo, poolAddress, history]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={4}\r\n      alignItems='flex-start'\r\n      justify='center'\r\n      className={classes.container}\r\n    >\r\n      {poolInfo && chainId == 56 ?\r\n        <>\r\n          <Grid item lg={8} className={classes.subcontainer}>\r\n            <InfoCard poolInfo={poolInfo} />\r\n          </Grid>\r\n          <Grid item lg className={classes.subcontainer}>\r\n            <ActionCard poolInfo={poolInfo} />\r\n          </Grid>\r\n        </>\r\n        :\r\n        <></>\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Funds;\r\n\r\n/*\r\n    <Grid item lg={8} className={classes.subcontainer}>\r\n      <InfoCard poolAddress={poolAddress} poolTokens={poolTokens} poolInfo={poolInfo}/>\r\n    </Grid>\r\n    <Grid item lg className={classes.subcontainer}>\r\n      <ActionCard poolAddress={poolAddress} poolTokens={poolTokens} poolInfo={poolInfo}/>\r\n    </Grid>\r\n*/","import { theme } from '../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    container: {\r\n      padding: '30px',\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: theme.palette.background.main,\r\n      minHeight: '75vh'\r\n      },\r\n    button: {\r\n       \r\n        color: theme.palette.text.primary, \r\n    },\r\n    title: {\r\n      textShadow: `0px 4px 12px ${theme.palette.secondary.main}`\r\n    },\r\n    backgroundVideo: {\r\n      position: 'fixed', zIndex: '-99', width: '100vw', height: '100vh'\r\n    },\r\n    subcontainer: {\r\n      minHeight: '40vh'\r\n    }\r\n\r\n    })\r\n);","import { theme } from '../../../theme'\r\nimport { \r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n    card: {\r\n        minWidth: '10vw',\r\n        minHeight: '25vw',\r\n        //backgroundColor: theme.palette.paper.main,\r\n        color: theme.palette.text.primary,\r\n        borderRadius: theme.palette.border.radius,\r\n        //border: theme.palette.border.color,\r\n        \r\n    },\r\n    header: {\r\n        width: '100%',\r\n        //backgroundColor: theme.palette.background.main,\r\n        //background: 'linear-gradient(90deg, rgba(0,0,0,0) 60%, rgba(219,165,23,0.542454481792717) 160%)',\r\n        //borderBottom: theme.palette.border.color,\r\n    },\r\n    button: {\r\n        padding: '5px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '60px',\r\n        minWidth: '130px',\r\n        color: theme.palette.text.primary,\r\n        \"&:hover\": {\r\n            borderBottom: `solid 6px ${theme.palette.primary.main}`\r\n        }\r\n    },\r\n    content: {\r\n        padding: '25px',\r\n        color: theme.palette.text.main \r\n    },\r\n    nowrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n    avatar: {\r\n        background: theme.palette.gradient.main,\r\n        width: '100%',\r\n        height: '100%',\r\n        '&:hover': {\r\n            boxShadow: `0 5px 30px ${theme.palette.primary.main}, 50px 10px 100px ${theme.palette.background.main}`\r\n       },       \r\n    },\r\n    avatarImage: {\r\n      \r\n    },\r\n    actions: {\r\n        minWidth: '250px'\r\n    }\r\n});","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getTokenAvatar } from '../../utils/utils';\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\nconst StyledAvatar = withStyles({\r\n    root: {\r\n       \r\n    },\r\n  })(Avatar);\r\n\r\nconst TokenAvatar =({tokenAddress, Size}) => {\r\n    const { chainId } = useWeb3React();\r\n    const [ img, setImg ] = React.useState();\r\n \r\n    React.useEffect(()=>{\r\n        if(chainId) {\r\n            const tokenimage = getTokenAvatar(tokenAddress, chainId);\r\n            setImg(tokenimage.img);\r\n        }\r\n\r\n    }, [chainId])\r\n    return (\r\n        <StyledAvatar\r\n            src={img}\r\n        />\r\n    )\r\n};\r\n\r\nexport default TokenAvatar;","import React from 'react';\r\nimport {\r\n    Grid,\r\n} from '@material-ui/core'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport MaterialCard from '@material-ui/core/Card';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useStyles } from './PoolCard.styles';\r\n\r\nimport { getCoinAvatar } from '../../../utils/utils';\r\n\r\nimport useCurrentTokens from '../../../hooks/useCurrentTokens';\r\n\r\nimport TokenAvatar from '../../avatars/TokenAvatar';\r\n\r\nconst PoolCard = ({ poolAddress }) => {\r\n    const { chainId } = useWeb3React();\r\n\r\n    const poolAvatar = getCoinAvatar(poolAddress, chainId);\r\n    const currentTokens = useCurrentTokens(poolAddress);\r\n\r\n    const [content, setContent] = React.useState([]);\r\n\r\n    const classes = useStyles();\r\n\r\n    React.useEffect(() => {\r\n        const renderContent = () => {\r\n            const _content = [];\r\n            for (let i = 0; i < currentTokens.length; i++) {\r\n                _content.push(\r\n                    <TokenAvatar\r\n                        tokenAddress={currentTokens[i]}\r\n                    />\r\n                );\r\n            }\r\n            setContent(_content);\r\n        };\r\n\r\n        if (currentTokens) {\r\n            renderContent(currentTokens)\r\n        }\r\n\r\n    }, [currentTokens])\r\n\r\n    return (\r\n        <MaterialCard\r\n            className={classes.card}\r\n            component={Link}\r\n            to={`/funds/${poolAddress}`}\r\n        >\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item xs className={classes.header}>\r\n                    <Avatar src={poolAvatar.img} className={classes.avatar} />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <AvatarGroup max={5} className={classes.content}>\r\n                        {content}\r\n                    </AvatarGroup>\r\n                </Grid>\r\n            </Grid>\r\n        </MaterialCard>\r\n\r\n    )\r\n}\r\n\r\nexport default PoolCard;","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { useStyles } from './Dashboard.styles'\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\n\r\nimport PoolCard from \"../../components/cards/poolcard/PoolCard.component\";\r\nimport InfoCard from '../../components/cards/infocard/InfoCard.component'\r\nimport ActionCard from '../../components/cards/actioncard/ActionCard.component'\r\n\r\nfunction Dashboard() {\r\n  const { account, chainId, library } = useWeb3React();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={4}\r\n      alignItems='flex-start'\r\n      justify='center'\r\n      className={classes.container}\r\n    >\r\n      {chainId === 56 ?\r\n        <>\r\n          <Grid item >\r\n            <PoolCard\r\n              poolAddress={addresses[chainId].biT10}\r\n            />\r\n          </Grid>\r\n        </>\r\n        :\r\n        <>\r\n          <div>Please Connect Wallet</div>\r\n        </>\r\n      }\r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n/*\r\n <>\r\n            <Grid item lg={8} className={classes.subcontainer}>\r\n              <InfoCard poolAddress={addresses[chainId].IndexPool}/>\r\n            </Grid>\r\n              <Grid item lg className={classes.subcontainer}>\r\n              <ActionCard poolAddress={addresses[chainId].IndexPool}/>\r\n            </Grid>\r\n          </>\r\n\r\n*/","import React, { useCallback } from 'react'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from 'react-router-dom'\r\n\r\nimport {\r\n  makeStyles,\r\n  ThemeProvider\r\n} from '@material-ui/core/styles'\r\n\r\nimport {\r\n  Grid,\r\n} from '@material-ui/core'\r\n\r\nimport { theme } from './theme'\r\n\r\nimport useWeb3Modal from './hooks/useWeb3Modal'\r\nimport Header from './components/header/Header.component'\r\nimport Footer from './components/footer/Footer.component'\r\n\r\nimport Funds from './containers/funds/Funds.component'\r\nimport Dashboard from './containers/dashboard/Dashboard.component'\r\n\r\nimport { ToastProvider } from 'react-toast-notifications'\r\n\r\nimport Web3 from 'web3'\r\n\r\nimport { BnbPriceContextProvider } from './state/bnbPriceContext'\r\n\r\nfunction App() {\r\n  const [darkMode, setDarkmode] = React.useState(true)\r\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal()\r\n\r\n  const checkConnection = useCallback(async () => {\r\n    // Check if browser is running Metamask\r\n    let web3\r\n    if (window.ethereum) {\r\n      web3 = new Web3(window.ethereum);\r\n    } else if (window.web3) {\r\n      web3 = new Web3(window.web3.currentProvider);\r\n    };\r\n\r\n    // Check if User is already connected by retrieving the accounts\r\n    web3.eth.getAccounts()\r\n      .then(async (accounts) => {\r\n        if (accounts.length > 0) {\r\n          if (!provider) {\r\n            loadWeb3Modal()\r\n          } else {\r\n            logoutOfWeb3Modal()\r\n          }\r\n        }\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    checkConnection();\r\n  }, [checkConnection]);\r\n\r\n  const useStyles = makeStyles((_theme) => ({\r\n    container: {\r\n      minHeight: '100vh',\r\n      backgroundColor: darkMode ? theme.palette.background.dark : theme.palette.background.light,\r\n    },\r\n    header: {\r\n      zIndex: 0\r\n    },\r\n    footer: {\r\n      zIndex: 0\r\n    }\r\n  })\r\n  )\r\n  const classes = useStyles()\r\n\r\n  function Child() {\r\n    // We can use the `useParams` hook here to access\r\n    // the dynamic pieces of the URL.\r\n    let { address } = useParams()\r\n\r\n    return (\r\n      <Funds poolAddress={address} />\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastProvider\r\n        autoDismiss\r\n        autoDismissTimeout={6000}\r\n        placement=\"bottom-center\"\r\n      >\r\n        <BnbPriceContextProvider>\r\n          <Router>\r\n            <Grid\r\n              container\r\n              className={classes.container}\r\n            >\r\n              <Grid item xs={12} className={classes.header}>\r\n                <Header\r\n                  title=\"Project\"\r\n                  nav1=\"nav1\"\r\n                  nav2=\"nav2\"\r\n                  nav3=\"nav3\"\r\n                  nav4=\"about\"\r\n                  provider={provider}\r\n                  loadWeb3Modal={loadWeb3Modal}\r\n                  logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Switch>\r\n                  <Route path=\"/\" exact component={Dashboard} />\r\n                  <Route path=\"/Dashboard\" component={Dashboard} />\r\n                  <Route path=\"/Funds/:address\" children={<Child />} />\r\n                </Switch>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.footer}>\r\n                <Footer\r\n                  nav1=\"nav1\"\r\n                  nav2=\"nav2\"\r\n                  nav3=\"nav3\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Router>\r\n        </BnbPriceContextProvider>\r\n      </ToastProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport Web3 from \"web3\";\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\n\r\n\r\nfunction getLibrary(provider) {\r\n   const library = new Web3(provider)\r\n   library.pollingInterval = 12000\r\n   return library\r\n}\r\n\r\n\r\nReactDOM.render(\r\n   <Web3ReactProvider getLibrary={getLibrary}>\r\n         <App />\r\n   </Web3ReactProvider>,\r\n   document.getElementById(\"root\"),\r\n);","module.exports = __webpack_public_path__ + \"static/media/biT10.cb669789.png\";","module.exports = __webpack_public_path__ + \"static/media/autofarm.e112c6df.webp\";","module.exports = __webpack_public_path__ + \"static/media/bakerytoken.93ee2f9b.webp\";","module.exports = __webpack_public_path__ + \"static/media/bscpad.73e11c2a.webp\";","module.exports = __webpack_public_path__ + \"static/media/bunny.d8b35ba0.webp\";","module.exports = __webpack_public_path__ + \"static/media/cake.5d4b4f8e.webp\";","module.exports = __webpack_public_path__ + \"static/media/safepal.fb5015a5.webp\";","module.exports = __webpack_public_path__ + \"static/media/trust.572f3bb5.webp\";","module.exports = __webpack_public_path__ + \"static/media/venus.76248b78.webp\";","module.exports = __webpack_public_path__ + \"static/media/wbnb.0e9aebe1.webp\";","module.exports = __webpack_public_path__ + \"static/media/swipe.c6a77275.webp\";","module.exports = __webpack_public_path__ + \"static/media/ellipsis.6fac7535.webp\";","module.exports = __webpack_public_path__ + \"static/media/banana.b3deadf9.webp\";","module.exports = __webpack_public_path__ + \"static/media/bifi.6019cb0d.webp\";","module.exports = __webpack_public_path__ + \"static/media/bison.902cb064.svg\";","module.exports = __webpack_public_path__ + \"static/media/BiSharesLogo@2x.51981527.png\";"],"sourceRoot":""}